// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPropertyMappingProviderScope(args?: GetPropertyMappingProviderScopeArgs, opts?: pulumi.InvokeOptions): Promise<GetPropertyMappingProviderScopeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("authentik:index/getPropertyMappingProviderScope:getPropertyMappingProviderScope", {
        "id": args.id,
        "ids": args.ids,
        "managed": args.managed,
        "managedLists": args.managedLists,
        "name": args.name,
        "scopeName": args.scopeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPropertyMappingProviderScope.
 */
export interface GetPropertyMappingProviderScopeArgs {
    id?: string;
    ids?: string[];
    managed?: string;
    managedLists?: string[];
    name?: string;
    scopeName?: string;
}

/**
 * A collection of values returned by getPropertyMappingProviderScope.
 */
export interface GetPropertyMappingProviderScopeResult {
    readonly description: string;
    readonly expression: string;
    readonly id: string;
    readonly ids: string[];
    readonly managed?: string;
    readonly managedLists?: string[];
    readonly name?: string;
    readonly scopeName: string;
}
export function getPropertyMappingProviderScopeOutput(args?: GetPropertyMappingProviderScopeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPropertyMappingProviderScopeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("authentik:index/getPropertyMappingProviderScope:getPropertyMappingProviderScope", {
        "id": args.id,
        "ids": args.ids,
        "managed": args.managed,
        "managedLists": args.managedLists,
        "name": args.name,
        "scopeName": args.scopeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPropertyMappingProviderScope.
 */
export interface GetPropertyMappingProviderScopeOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    managed?: pulumi.Input<string>;
    managedLists?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    scopeName?: pulumi.Input<string>;
}
