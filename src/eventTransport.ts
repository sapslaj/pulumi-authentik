// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EventTransport extends pulumi.CustomResource {
    /**
     * Get an existing EventTransport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EventTransportState, opts?: pulumi.CustomResourceOptions): EventTransport {
        return new EventTransport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/eventTransport:EventTransport';

    /**
     * Returns true if the given object is an instance of EventTransport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EventTransport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventTransport.__pulumiType;
    }

    /**
     * Defaults to `authentik Notification:`.
     */
    declare public readonly emailSubjectPrefix: pulumi.Output<string | undefined>;
    /**
     * Defaults to `email/event_notification.html`.
     */
    declare public readonly emailTemplate: pulumi.Output<string | undefined>;
    declare public readonly eventTransportId: pulumi.Output<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`local`" pulumi-lang-dotnet="`Local`" pulumi-lang-go="`local`" pulumi-lang-python="`local`" pulumi-lang-yaml="`local`" pulumi-lang-java="`local`">`local`</span>
     *   - <span pulumi-lang-nodejs="`webhook`" pulumi-lang-dotnet="`Webhook`" pulumi-lang-go="`webhook`" pulumi-lang-python="`webhook`" pulumi-lang-yaml="`webhook`" pulumi-lang-java="`webhook`">`webhook`</span>
     *   - <span pulumi-lang-nodejs="`webhookSlack`" pulumi-lang-dotnet="`WebhookSlack`" pulumi-lang-go="`webhookSlack`" pulumi-lang-python="`webhook_slack`" pulumi-lang-yaml="`webhookSlack`" pulumi-lang-java="`webhookSlack`">`webhook_slack`</span>
     *   - <span pulumi-lang-nodejs="`email`" pulumi-lang-dotnet="`Email`" pulumi-lang-go="`email`" pulumi-lang-python="`email`" pulumi-lang-yaml="`email`" pulumi-lang-java="`email`">`email`</span>
     */
    declare public readonly mode: pulumi.Output<string>;
    declare public readonly name: pulumi.Output<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    declare public readonly sendOnce: pulumi.Output<boolean | undefined>;
    declare public readonly webhookMappingBody: pulumi.Output<string | undefined>;
    declare public readonly webhookMappingHeaders: pulumi.Output<string | undefined>;
    declare public readonly webhookUrl: pulumi.Output<string | undefined>;

    /**
     * Create a EventTransport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventTransportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EventTransportArgs | EventTransportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EventTransportState | undefined;
            resourceInputs["emailSubjectPrefix"] = state?.emailSubjectPrefix;
            resourceInputs["emailTemplate"] = state?.emailTemplate;
            resourceInputs["eventTransportId"] = state?.eventTransportId;
            resourceInputs["mode"] = state?.mode;
            resourceInputs["name"] = state?.name;
            resourceInputs["sendOnce"] = state?.sendOnce;
            resourceInputs["webhookMappingBody"] = state?.webhookMappingBody;
            resourceInputs["webhookMappingHeaders"] = state?.webhookMappingHeaders;
            resourceInputs["webhookUrl"] = state?.webhookUrl;
        } else {
            const args = argsOrState as EventTransportArgs | undefined;
            if (args?.mode === undefined && !opts.urn) {
                throw new Error("Missing required property 'mode'");
            }
            resourceInputs["emailSubjectPrefix"] = args?.emailSubjectPrefix;
            resourceInputs["emailTemplate"] = args?.emailTemplate;
            resourceInputs["eventTransportId"] = args?.eventTransportId;
            resourceInputs["mode"] = args?.mode;
            resourceInputs["name"] = args?.name;
            resourceInputs["sendOnce"] = args?.sendOnce;
            resourceInputs["webhookMappingBody"] = args?.webhookMappingBody;
            resourceInputs["webhookMappingHeaders"] = args?.webhookMappingHeaders;
            resourceInputs["webhookUrl"] = args?.webhookUrl;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EventTransport.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EventTransport resources.
 */
export interface EventTransportState {
    /**
     * Defaults to `authentik Notification:`.
     */
    emailSubjectPrefix?: pulumi.Input<string>;
    /**
     * Defaults to `email/event_notification.html`.
     */
    emailTemplate?: pulumi.Input<string>;
    eventTransportId?: pulumi.Input<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`local`" pulumi-lang-dotnet="`Local`" pulumi-lang-go="`local`" pulumi-lang-python="`local`" pulumi-lang-yaml="`local`" pulumi-lang-java="`local`">`local`</span>
     *   - <span pulumi-lang-nodejs="`webhook`" pulumi-lang-dotnet="`Webhook`" pulumi-lang-go="`webhook`" pulumi-lang-python="`webhook`" pulumi-lang-yaml="`webhook`" pulumi-lang-java="`webhook`">`webhook`</span>
     *   - <span pulumi-lang-nodejs="`webhookSlack`" pulumi-lang-dotnet="`WebhookSlack`" pulumi-lang-go="`webhookSlack`" pulumi-lang-python="`webhook_slack`" pulumi-lang-yaml="`webhookSlack`" pulumi-lang-java="`webhookSlack`">`webhook_slack`</span>
     *   - <span pulumi-lang-nodejs="`email`" pulumi-lang-dotnet="`Email`" pulumi-lang-go="`email`" pulumi-lang-python="`email`" pulumi-lang-yaml="`email`" pulumi-lang-java="`email`">`email`</span>
     */
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    sendOnce?: pulumi.Input<boolean>;
    webhookMappingBody?: pulumi.Input<string>;
    webhookMappingHeaders?: pulumi.Input<string>;
    webhookUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EventTransport resource.
 */
export interface EventTransportArgs {
    /**
     * Defaults to `authentik Notification:`.
     */
    emailSubjectPrefix?: pulumi.Input<string>;
    /**
     * Defaults to `email/event_notification.html`.
     */
    emailTemplate?: pulumi.Input<string>;
    eventTransportId?: pulumi.Input<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`local`" pulumi-lang-dotnet="`Local`" pulumi-lang-go="`local`" pulumi-lang-python="`local`" pulumi-lang-yaml="`local`" pulumi-lang-java="`local`">`local`</span>
     *   - <span pulumi-lang-nodejs="`webhook`" pulumi-lang-dotnet="`Webhook`" pulumi-lang-go="`webhook`" pulumi-lang-python="`webhook`" pulumi-lang-yaml="`webhook`" pulumi-lang-java="`webhook`">`webhook`</span>
     *   - <span pulumi-lang-nodejs="`webhookSlack`" pulumi-lang-dotnet="`WebhookSlack`" pulumi-lang-go="`webhookSlack`" pulumi-lang-python="`webhook_slack`" pulumi-lang-yaml="`webhookSlack`" pulumi-lang-java="`webhookSlack`">`webhook_slack`</span>
     *   - <span pulumi-lang-nodejs="`email`" pulumi-lang-dotnet="`Email`" pulumi-lang-go="`email`" pulumi-lang-python="`email`" pulumi-lang-yaml="`email`" pulumi-lang-java="`email`">`email`</span>
     */
    mode: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    sendOnce?: pulumi.Input<boolean>;
    webhookMappingBody?: pulumi.Input<string>;
    webhookMappingHeaders?: pulumi.Input<string>;
    webhookUrl?: pulumi.Input<string>;
}
