// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SourceKerberos extends pulumi.CustomResource {
    /**
     * Get an existing SourceKerberos resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceKerberosState, opts?: pulumi.CustomResourceOptions): SourceKerberos {
        return new SourceKerberos(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/sourceKerberos:SourceKerberos';

    /**
     * Returns true if the given object is an instance of SourceKerberos.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SourceKerberos {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SourceKerberos.__pulumiType;
    }

    declare public readonly authenticationFlow: pulumi.Output<string | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    declare public readonly enrollmentFlow: pulumi.Output<string | undefined>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>
     *   - <span pulumi-lang-nodejs="`nameLink`" pulumi-lang-dotnet="`NameLink`" pulumi-lang-go="`nameLink`" pulumi-lang-python="`name_link`" pulumi-lang-yaml="`nameLink`" pulumi-lang-java="`nameLink`">`name_link`</span>
     *   - <span pulumi-lang-nodejs="`nameDeny`" pulumi-lang-dotnet="`NameDeny`" pulumi-lang-go="`nameDeny`" pulumi-lang-python="`name_deny`" pulumi-lang-yaml="`nameDeny`" pulumi-lang-java="`nameDeny`">`name_deny`</span>
     *  Defaults to <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>.
     */
    declare public readonly groupMatchingMode: pulumi.Output<string | undefined>;
    /**
     * Custom krb5.conf to use. Uses the system one by default
     */
    declare public readonly krb5Conf: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    /**
     * If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    declare public readonly passwordLoginUpdateInternalPassword: pulumi.Output<boolean | undefined>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`all`" pulumi-lang-dotnet="`All`" pulumi-lang-go="`all`" pulumi-lang-python="`all`" pulumi-lang-yaml="`all`" pulumi-lang-java="`all`">`all`</span>
     *   - <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>
     *  Defaults to <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>.
     */
    declare public readonly policyEngineMode: pulumi.Output<string | undefined>;
    /**
     * Kerberos realm
     */
    declare public readonly realm: pulumi.Output<string>;
    declare public readonly slug: pulumi.Output<string>;
    declare public readonly sourceKerberosId: pulumi.Output<string>;
    /**
     * Credential cache to use for SPNEGO in form type:residual
     */
    declare public readonly spnegoCcache: pulumi.Output<string | undefined>;
    /**
     * SPNEGO keytab base64-encoded or path to keytab in the form FILE:path
     */
    declare public readonly spnegoKeytab: pulumi.Output<string | undefined>;
    /**
     * Force the use of a specific server name for SPNEGO
     */
    declare public readonly spnegoServerName: pulumi.Output<string | undefined>;
    /**
     * Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
     */
    declare public readonly syncCcache: pulumi.Output<string | undefined>;
    /**
     * Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual
     */
    declare public readonly syncKeytab: pulumi.Output<string | undefined>;
    /**
     * Password to authenticate to kadmin for sync
     */
    declare public readonly syncPassword: pulumi.Output<string | undefined>;
    /**
     * Principal to authenticate to kadmin for sync.
     */
    declare public readonly syncPrincipal: pulumi.Output<string | undefined>;
    /**
     * Sync users from Kerberos into authentik Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    declare public readonly syncUsers: pulumi.Output<boolean | undefined>;
    /**
     * When a user changes their password, sync it back to Kerberos Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    declare public readonly syncUsersPassword: pulumi.Output<boolean | undefined>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>
     *   - <span pulumi-lang-nodejs="`emailLink`" pulumi-lang-dotnet="`EmailLink`" pulumi-lang-go="`emailLink`" pulumi-lang-python="`email_link`" pulumi-lang-yaml="`emailLink`" pulumi-lang-java="`emailLink`">`email_link`</span>
     *   - <span pulumi-lang-nodejs="`emailDeny`" pulumi-lang-dotnet="`EmailDeny`" pulumi-lang-go="`emailDeny`" pulumi-lang-python="`email_deny`" pulumi-lang-yaml="`emailDeny`" pulumi-lang-java="`emailDeny`">`email_deny`</span>
     *   - <span pulumi-lang-nodejs="`usernameLink`" pulumi-lang-dotnet="`UsernameLink`" pulumi-lang-go="`usernameLink`" pulumi-lang-python="`username_link`" pulumi-lang-yaml="`usernameLink`" pulumi-lang-java="`usernameLink`">`username_link`</span>
     *   - <span pulumi-lang-nodejs="`usernameDeny`" pulumi-lang-dotnet="`UsernameDeny`" pulumi-lang-go="`usernameDeny`" pulumi-lang-python="`username_deny`" pulumi-lang-yaml="`usernameDeny`" pulumi-lang-java="`usernameDeny`">`username_deny`</span>
     *  Defaults to <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>.
     */
    declare public readonly userMatchingMode: pulumi.Output<string | undefined>;
    /**
     * Defaults to `goauthentik.io/sources/%(slug)s`.
     */
    declare public readonly userPathTemplate: pulumi.Output<string | undefined>;
    /**
     * Generated.
     */
    declare public readonly uuid: pulumi.Output<string>;

    /**
     * Create a SourceKerberos resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceKerberosArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SourceKerberosArgs | SourceKerberosState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SourceKerberosState | undefined;
            resourceInputs["authenticationFlow"] = state?.authenticationFlow;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["enrollmentFlow"] = state?.enrollmentFlow;
            resourceInputs["groupMatchingMode"] = state?.groupMatchingMode;
            resourceInputs["krb5Conf"] = state?.krb5Conf;
            resourceInputs["name"] = state?.name;
            resourceInputs["passwordLoginUpdateInternalPassword"] = state?.passwordLoginUpdateInternalPassword;
            resourceInputs["policyEngineMode"] = state?.policyEngineMode;
            resourceInputs["realm"] = state?.realm;
            resourceInputs["slug"] = state?.slug;
            resourceInputs["sourceKerberosId"] = state?.sourceKerberosId;
            resourceInputs["spnegoCcache"] = state?.spnegoCcache;
            resourceInputs["spnegoKeytab"] = state?.spnegoKeytab;
            resourceInputs["spnegoServerName"] = state?.spnegoServerName;
            resourceInputs["syncCcache"] = state?.syncCcache;
            resourceInputs["syncKeytab"] = state?.syncKeytab;
            resourceInputs["syncPassword"] = state?.syncPassword;
            resourceInputs["syncPrincipal"] = state?.syncPrincipal;
            resourceInputs["syncUsers"] = state?.syncUsers;
            resourceInputs["syncUsersPassword"] = state?.syncUsersPassword;
            resourceInputs["userMatchingMode"] = state?.userMatchingMode;
            resourceInputs["userPathTemplate"] = state?.userPathTemplate;
            resourceInputs["uuid"] = state?.uuid;
        } else {
            const args = argsOrState as SourceKerberosArgs | undefined;
            if (args?.realm === undefined && !opts.urn) {
                throw new Error("Missing required property 'realm'");
            }
            if (args?.slug === undefined && !opts.urn) {
                throw new Error("Missing required property 'slug'");
            }
            resourceInputs["authenticationFlow"] = args?.authenticationFlow;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["enrollmentFlow"] = args?.enrollmentFlow;
            resourceInputs["groupMatchingMode"] = args?.groupMatchingMode;
            resourceInputs["krb5Conf"] = args?.krb5Conf;
            resourceInputs["name"] = args?.name;
            resourceInputs["passwordLoginUpdateInternalPassword"] = args?.passwordLoginUpdateInternalPassword;
            resourceInputs["policyEngineMode"] = args?.policyEngineMode;
            resourceInputs["realm"] = args?.realm;
            resourceInputs["slug"] = args?.slug;
            resourceInputs["sourceKerberosId"] = args?.sourceKerberosId;
            resourceInputs["spnegoCcache"] = args?.spnegoCcache;
            resourceInputs["spnegoKeytab"] = args?.spnegoKeytab ? pulumi.secret(args.spnegoKeytab) : undefined;
            resourceInputs["spnegoServerName"] = args?.spnegoServerName;
            resourceInputs["syncCcache"] = args?.syncCcache;
            resourceInputs["syncKeytab"] = args?.syncKeytab ? pulumi.secret(args.syncKeytab) : undefined;
            resourceInputs["syncPassword"] = args?.syncPassword ? pulumi.secret(args.syncPassword) : undefined;
            resourceInputs["syncPrincipal"] = args?.syncPrincipal;
            resourceInputs["syncUsers"] = args?.syncUsers;
            resourceInputs["syncUsersPassword"] = args?.syncUsersPassword;
            resourceInputs["userMatchingMode"] = args?.userMatchingMode;
            resourceInputs["userPathTemplate"] = args?.userPathTemplate;
            resourceInputs["uuid"] = args?.uuid;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["spnegoKeytab", "syncKeytab", "syncPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SourceKerberos.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SourceKerberos resources.
 */
export interface SourceKerberosState {
    authenticationFlow?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    enabled?: pulumi.Input<boolean>;
    enrollmentFlow?: pulumi.Input<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>
     *   - <span pulumi-lang-nodejs="`nameLink`" pulumi-lang-dotnet="`NameLink`" pulumi-lang-go="`nameLink`" pulumi-lang-python="`name_link`" pulumi-lang-yaml="`nameLink`" pulumi-lang-java="`nameLink`">`name_link`</span>
     *   - <span pulumi-lang-nodejs="`nameDeny`" pulumi-lang-dotnet="`NameDeny`" pulumi-lang-go="`nameDeny`" pulumi-lang-python="`name_deny`" pulumi-lang-yaml="`nameDeny`" pulumi-lang-java="`nameDeny`">`name_deny`</span>
     *  Defaults to <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>.
     */
    groupMatchingMode?: pulumi.Input<string>;
    /**
     * Custom krb5.conf to use. Uses the system one by default
     */
    krb5Conf?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    passwordLoginUpdateInternalPassword?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`all`" pulumi-lang-dotnet="`All`" pulumi-lang-go="`all`" pulumi-lang-python="`all`" pulumi-lang-yaml="`all`" pulumi-lang-java="`all`">`all`</span>
     *   - <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>
     *  Defaults to <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>.
     */
    policyEngineMode?: pulumi.Input<string>;
    /**
     * Kerberos realm
     */
    realm?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
    sourceKerberosId?: pulumi.Input<string>;
    /**
     * Credential cache to use for SPNEGO in form type:residual
     */
    spnegoCcache?: pulumi.Input<string>;
    /**
     * SPNEGO keytab base64-encoded or path to keytab in the form FILE:path
     */
    spnegoKeytab?: pulumi.Input<string>;
    /**
     * Force the use of a specific server name for SPNEGO
     */
    spnegoServerName?: pulumi.Input<string>;
    /**
     * Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
     */
    syncCcache?: pulumi.Input<string>;
    /**
     * Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual
     */
    syncKeytab?: pulumi.Input<string>;
    /**
     * Password to authenticate to kadmin for sync
     */
    syncPassword?: pulumi.Input<string>;
    /**
     * Principal to authenticate to kadmin for sync.
     */
    syncPrincipal?: pulumi.Input<string>;
    /**
     * Sync users from Kerberos into authentik Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    syncUsers?: pulumi.Input<boolean>;
    /**
     * When a user changes their password, sync it back to Kerberos Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    syncUsersPassword?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>
     *   - <span pulumi-lang-nodejs="`emailLink`" pulumi-lang-dotnet="`EmailLink`" pulumi-lang-go="`emailLink`" pulumi-lang-python="`email_link`" pulumi-lang-yaml="`emailLink`" pulumi-lang-java="`emailLink`">`email_link`</span>
     *   - <span pulumi-lang-nodejs="`emailDeny`" pulumi-lang-dotnet="`EmailDeny`" pulumi-lang-go="`emailDeny`" pulumi-lang-python="`email_deny`" pulumi-lang-yaml="`emailDeny`" pulumi-lang-java="`emailDeny`">`email_deny`</span>
     *   - <span pulumi-lang-nodejs="`usernameLink`" pulumi-lang-dotnet="`UsernameLink`" pulumi-lang-go="`usernameLink`" pulumi-lang-python="`username_link`" pulumi-lang-yaml="`usernameLink`" pulumi-lang-java="`usernameLink`">`username_link`</span>
     *   - <span pulumi-lang-nodejs="`usernameDeny`" pulumi-lang-dotnet="`UsernameDeny`" pulumi-lang-go="`usernameDeny`" pulumi-lang-python="`username_deny`" pulumi-lang-yaml="`usernameDeny`" pulumi-lang-java="`usernameDeny`">`username_deny`</span>
     *  Defaults to <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>.
     */
    userMatchingMode?: pulumi.Input<string>;
    /**
     * Defaults to `goauthentik.io/sources/%(slug)s`.
     */
    userPathTemplate?: pulumi.Input<string>;
    /**
     * Generated.
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SourceKerberos resource.
 */
export interface SourceKerberosArgs {
    authenticationFlow?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    enabled?: pulumi.Input<boolean>;
    enrollmentFlow?: pulumi.Input<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>
     *   - <span pulumi-lang-nodejs="`nameLink`" pulumi-lang-dotnet="`NameLink`" pulumi-lang-go="`nameLink`" pulumi-lang-python="`name_link`" pulumi-lang-yaml="`nameLink`" pulumi-lang-java="`nameLink`">`name_link`</span>
     *   - <span pulumi-lang-nodejs="`nameDeny`" pulumi-lang-dotnet="`NameDeny`" pulumi-lang-go="`nameDeny`" pulumi-lang-python="`name_deny`" pulumi-lang-yaml="`nameDeny`" pulumi-lang-java="`nameDeny`">`name_deny`</span>
     *  Defaults to <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>.
     */
    groupMatchingMode?: pulumi.Input<string>;
    /**
     * Custom krb5.conf to use. Uses the system one by default
     */
    krb5Conf?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    passwordLoginUpdateInternalPassword?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`all`" pulumi-lang-dotnet="`All`" pulumi-lang-go="`all`" pulumi-lang-python="`all`" pulumi-lang-yaml="`all`" pulumi-lang-java="`all`">`all`</span>
     *   - <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>
     *  Defaults to <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>.
     */
    policyEngineMode?: pulumi.Input<string>;
    /**
     * Kerberos realm
     */
    realm: pulumi.Input<string>;
    slug: pulumi.Input<string>;
    sourceKerberosId?: pulumi.Input<string>;
    /**
     * Credential cache to use for SPNEGO in form type:residual
     */
    spnegoCcache?: pulumi.Input<string>;
    /**
     * SPNEGO keytab base64-encoded or path to keytab in the form FILE:path
     */
    spnegoKeytab?: pulumi.Input<string>;
    /**
     * Force the use of a specific server name for SPNEGO
     */
    spnegoServerName?: pulumi.Input<string>;
    /**
     * Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
     */
    syncCcache?: pulumi.Input<string>;
    /**
     * Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual
     */
    syncKeytab?: pulumi.Input<string>;
    /**
     * Password to authenticate to kadmin for sync
     */
    syncPassword?: pulumi.Input<string>;
    /**
     * Principal to authenticate to kadmin for sync.
     */
    syncPrincipal?: pulumi.Input<string>;
    /**
     * Sync users from Kerberos into authentik Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    syncUsers?: pulumi.Input<boolean>;
    /**
     * When a user changes their password, sync it back to Kerberos Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    syncUsersPassword?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>
     *   - <span pulumi-lang-nodejs="`emailLink`" pulumi-lang-dotnet="`EmailLink`" pulumi-lang-go="`emailLink`" pulumi-lang-python="`email_link`" pulumi-lang-yaml="`emailLink`" pulumi-lang-java="`emailLink`">`email_link`</span>
     *   - <span pulumi-lang-nodejs="`emailDeny`" pulumi-lang-dotnet="`EmailDeny`" pulumi-lang-go="`emailDeny`" pulumi-lang-python="`email_deny`" pulumi-lang-yaml="`emailDeny`" pulumi-lang-java="`emailDeny`">`email_deny`</span>
     *   - <span pulumi-lang-nodejs="`usernameLink`" pulumi-lang-dotnet="`UsernameLink`" pulumi-lang-go="`usernameLink`" pulumi-lang-python="`username_link`" pulumi-lang-yaml="`usernameLink`" pulumi-lang-java="`usernameLink`">`username_link`</span>
     *   - <span pulumi-lang-nodejs="`usernameDeny`" pulumi-lang-dotnet="`UsernameDeny`" pulumi-lang-go="`usernameDeny`" pulumi-lang-python="`username_deny`" pulumi-lang-yaml="`usernameDeny`" pulumi-lang-java="`usernameDeny`">`username_deny`</span>
     *  Defaults to <span pulumi-lang-nodejs="`identifier`" pulumi-lang-dotnet="`Identifier`" pulumi-lang-go="`identifier`" pulumi-lang-python="`identifier`" pulumi-lang-yaml="`identifier`" pulumi-lang-java="`identifier`">`identifier`</span>.
     */
    userMatchingMode?: pulumi.Input<string>;
    /**
     * Defaults to `goauthentik.io/sources/%(slug)s`.
     */
    userPathTemplate?: pulumi.Input<string>;
    /**
     * Generated.
     */
    uuid?: pulumi.Input<string>;
}
