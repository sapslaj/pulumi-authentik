// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SourceScim extends pulumi.CustomResource {
    /**
     * Get an existing SourceScim resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceScimState, opts?: pulumi.CustomResourceOptions): SourceScim {
        return new SourceScim(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/sourceScim:SourceScim';

    /**
     * Returns true if the given object is an instance of SourceScim.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SourceScim {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SourceScim.__pulumiType;
    }

    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly propertyMappings: pulumi.Output<string[] | undefined>;
    declare public readonly propertyMappingsGroups: pulumi.Output<string[] | undefined>;
    /**
     * SCIM URL Generated.
     */
    declare public /*out*/ readonly scimUrl: pulumi.Output<string>;
    declare public readonly slug: pulumi.Output<string>;
    declare public readonly sourceScimId: pulumi.Output<string>;
    /**
     * SCIM URL Generated.
     */
    declare public /*out*/ readonly token: pulumi.Output<string>;
    /**
     * Defaults to `goauthentik.io/sources/%(slug)s`.
     */
    declare public readonly userPathTemplate: pulumi.Output<string | undefined>;
    /**
     * Generated.
     */
    declare public readonly uuid: pulumi.Output<string>;

    /**
     * Create a SourceScim resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceScimArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SourceScimArgs | SourceScimState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SourceScimState | undefined;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["name"] = state?.name;
            resourceInputs["propertyMappings"] = state?.propertyMappings;
            resourceInputs["propertyMappingsGroups"] = state?.propertyMappingsGroups;
            resourceInputs["scimUrl"] = state?.scimUrl;
            resourceInputs["slug"] = state?.slug;
            resourceInputs["sourceScimId"] = state?.sourceScimId;
            resourceInputs["token"] = state?.token;
            resourceInputs["userPathTemplate"] = state?.userPathTemplate;
            resourceInputs["uuid"] = state?.uuid;
        } else {
            const args = argsOrState as SourceScimArgs | undefined;
            if (args?.slug === undefined && !opts.urn) {
                throw new Error("Missing required property 'slug'");
            }
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["propertyMappings"] = args?.propertyMappings;
            resourceInputs["propertyMappingsGroups"] = args?.propertyMappingsGroups;
            resourceInputs["slug"] = args?.slug;
            resourceInputs["sourceScimId"] = args?.sourceScimId;
            resourceInputs["userPathTemplate"] = args?.userPathTemplate;
            resourceInputs["uuid"] = args?.uuid;
            resourceInputs["scimUrl"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SourceScim.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SourceScim resources.
 */
export interface SourceScimState {
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    propertyMappings?: pulumi.Input<pulumi.Input<string>[]>;
    propertyMappingsGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * SCIM URL Generated.
     */
    scimUrl?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
    sourceScimId?: pulumi.Input<string>;
    /**
     * SCIM URL Generated.
     */
    token?: pulumi.Input<string>;
    /**
     * Defaults to `goauthentik.io/sources/%(slug)s`.
     */
    userPathTemplate?: pulumi.Input<string>;
    /**
     * Generated.
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SourceScim resource.
 */
export interface SourceScimArgs {
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    propertyMappings?: pulumi.Input<pulumi.Input<string>[]>;
    propertyMappingsGroups?: pulumi.Input<pulumi.Input<string>[]>;
    slug: pulumi.Input<string>;
    sourceScimId?: pulumi.Input<string>;
    /**
     * Defaults to `goauthentik.io/sources/%(slug)s`.
     */
    userPathTemplate?: pulumi.Input<string>;
    /**
     * Generated.
     */
    uuid?: pulumi.Input<string>;
}
