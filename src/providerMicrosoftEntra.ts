// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProviderMicrosoftEntra extends pulumi.CustomResource {
    /**
     * Get an existing ProviderMicrosoftEntra resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProviderMicrosoftEntraState, opts?: pulumi.CustomResourceOptions): ProviderMicrosoftEntra {
        return new ProviderMicrosoftEntra(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/providerMicrosoftEntra:ProviderMicrosoftEntra';

    /**
     * Returns true if the given object is an instance of ProviderMicrosoftEntra.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProviderMicrosoftEntra {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProviderMicrosoftEntra.__pulumiType;
    }

    declare public readonly clientId: pulumi.Output<string>;
    declare public readonly clientSecret: pulumi.Output<string>;
    /**
     * Defaults to `false`.
     */
    declare public readonly dryRun: pulumi.Output<boolean | undefined>;
    declare public readonly excludeUsersServiceAccount: pulumi.Output<boolean | undefined>;
    declare public readonly filterGroup: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
     */
    declare public readonly groupDeleteAction: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly propertyMappings: pulumi.Output<string[] | undefined>;
    declare public readonly propertyMappingsGroups: pulumi.Output<string[] | undefined>;
    declare public readonly providerMicrosoftEntraId: pulumi.Output<string>;
    declare public readonly tenantId: pulumi.Output<string>;
    /**
     * Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
     */
    declare public readonly userDeleteAction: pulumi.Output<string | undefined>;

    /**
     * Create a ProviderMicrosoftEntra resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderMicrosoftEntraArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProviderMicrosoftEntraArgs | ProviderMicrosoftEntraState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProviderMicrosoftEntraState | undefined;
            resourceInputs["clientId"] = state?.clientId;
            resourceInputs["clientSecret"] = state?.clientSecret;
            resourceInputs["dryRun"] = state?.dryRun;
            resourceInputs["excludeUsersServiceAccount"] = state?.excludeUsersServiceAccount;
            resourceInputs["filterGroup"] = state?.filterGroup;
            resourceInputs["groupDeleteAction"] = state?.groupDeleteAction;
            resourceInputs["name"] = state?.name;
            resourceInputs["propertyMappings"] = state?.propertyMappings;
            resourceInputs["propertyMappingsGroups"] = state?.propertyMappingsGroups;
            resourceInputs["providerMicrosoftEntraId"] = state?.providerMicrosoftEntraId;
            resourceInputs["tenantId"] = state?.tenantId;
            resourceInputs["userDeleteAction"] = state?.userDeleteAction;
        } else {
            const args = argsOrState as ProviderMicrosoftEntraArgs | undefined;
            if (args?.clientId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if (args?.clientSecret === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if (args?.tenantId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["dryRun"] = args?.dryRun;
            resourceInputs["excludeUsersServiceAccount"] = args?.excludeUsersServiceAccount;
            resourceInputs["filterGroup"] = args?.filterGroup;
            resourceInputs["groupDeleteAction"] = args?.groupDeleteAction;
            resourceInputs["name"] = args?.name;
            resourceInputs["propertyMappings"] = args?.propertyMappings;
            resourceInputs["propertyMappingsGroups"] = args?.propertyMappingsGroups;
            resourceInputs["providerMicrosoftEntraId"] = args?.providerMicrosoftEntraId;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["userDeleteAction"] = args?.userDeleteAction;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ProviderMicrosoftEntra.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProviderMicrosoftEntra resources.
 */
export interface ProviderMicrosoftEntraState {
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    excludeUsersServiceAccount?: pulumi.Input<boolean>;
    filterGroup?: pulumi.Input<string>;
    /**
     * Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
     */
    groupDeleteAction?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    propertyMappings?: pulumi.Input<pulumi.Input<string>[]>;
    propertyMappingsGroups?: pulumi.Input<pulumi.Input<string>[]>;
    providerMicrosoftEntraId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    /**
     * Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
     */
    userDeleteAction?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProviderMicrosoftEntra resource.
 */
export interface ProviderMicrosoftEntraArgs {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    excludeUsersServiceAccount?: pulumi.Input<boolean>;
    filterGroup?: pulumi.Input<string>;
    /**
     * Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
     */
    groupDeleteAction?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    propertyMappings?: pulumi.Input<pulumi.Input<string>[]>;
    propertyMappingsGroups?: pulumi.Input<pulumi.Input<string>[]>;
    providerMicrosoftEntraId?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    /**
     * Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
     */
    userDeleteAction?: pulumi.Input<string>;
}
