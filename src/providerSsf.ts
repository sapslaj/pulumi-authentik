// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProviderSsf extends pulumi.CustomResource {
    /**
     * Get an existing ProviderSsf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProviderSsfState, opts?: pulumi.CustomResourceOptions): ProviderSsf {
        return new ProviderSsf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/providerSsf:ProviderSsf';

    /**
     * Returns true if the given object is an instance of ProviderSsf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProviderSsf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProviderSsf.__pulumiType;
    }

    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `days=30`.
     */
    declare public readonly eventRetention: pulumi.Output<string | undefined>;
    /**
     * JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
     */
    declare public readonly jwtFederationProviders: pulumi.Output<number[] | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly providerSsfId: pulumi.Output<string>;
    declare public readonly signingKey: pulumi.Output<string | undefined>;

    /**
     * Create a ProviderSsf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderSsfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProviderSsfArgs | ProviderSsfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProviderSsfState | undefined;
            resourceInputs["eventRetention"] = state?.eventRetention;
            resourceInputs["jwtFederationProviders"] = state?.jwtFederationProviders;
            resourceInputs["name"] = state?.name;
            resourceInputs["providerSsfId"] = state?.providerSsfId;
            resourceInputs["signingKey"] = state?.signingKey;
        } else {
            const args = argsOrState as ProviderSsfArgs | undefined;
            resourceInputs["eventRetention"] = args?.eventRetention;
            resourceInputs["jwtFederationProviders"] = args?.jwtFederationProviders;
            resourceInputs["name"] = args?.name;
            resourceInputs["providerSsfId"] = args?.providerSsfId;
            resourceInputs["signingKey"] = args?.signingKey;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProviderSsf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProviderSsf resources.
 */
export interface ProviderSsfState {
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `days=30`.
     */
    eventRetention?: pulumi.Input<string>;
    /**
     * JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
     */
    jwtFederationProviders?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    providerSsfId?: pulumi.Input<string>;
    signingKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProviderSsf resource.
 */
export interface ProviderSsfArgs {
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `days=30`.
     */
    eventRetention?: pulumi.Input<string>;
    /**
     * JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
     */
    jwtFederationProviders?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    providerSsfId?: pulumi.Input<string>;
    signingKey?: pulumi.Input<string>;
}
