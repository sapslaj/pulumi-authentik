// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    declare public readonly applicationId: pulumi.Output<string>;
    declare public readonly backchannelProviders: pulumi.Output<number[] | undefined>;
    declare public readonly group: pulumi.Output<string | undefined>;
    declare public readonly metaDescription: pulumi.Output<string | undefined>;
    declare public readonly metaIcon: pulumi.Output<string | undefined>;
    declare public readonly metaLaunchUrl: pulumi.Output<string | undefined>;
    declare public readonly metaPublisher: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    declare public readonly openInNewTab: pulumi.Output<boolean | undefined>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`all`" pulumi-lang-dotnet="`All`" pulumi-lang-go="`all`" pulumi-lang-python="`all`" pulumi-lang-yaml="`all`" pulumi-lang-java="`all`">`all`</span>
     *   - <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>
     *  Defaults to <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>.
     */
    declare public readonly policyEngineMode: pulumi.Output<string | undefined>;
    declare public readonly protocolProvider: pulumi.Output<number | undefined>;
    declare public readonly slug: pulumi.Output<string>;
    /**
     * Generated.
     */
    declare public readonly uuid: pulumi.Output<string>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["applicationId"] = state?.applicationId;
            resourceInputs["backchannelProviders"] = state?.backchannelProviders;
            resourceInputs["group"] = state?.group;
            resourceInputs["metaDescription"] = state?.metaDescription;
            resourceInputs["metaIcon"] = state?.metaIcon;
            resourceInputs["metaLaunchUrl"] = state?.metaLaunchUrl;
            resourceInputs["metaPublisher"] = state?.metaPublisher;
            resourceInputs["name"] = state?.name;
            resourceInputs["openInNewTab"] = state?.openInNewTab;
            resourceInputs["policyEngineMode"] = state?.policyEngineMode;
            resourceInputs["protocolProvider"] = state?.protocolProvider;
            resourceInputs["slug"] = state?.slug;
            resourceInputs["uuid"] = state?.uuid;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            if (args?.slug === undefined && !opts.urn) {
                throw new Error("Missing required property 'slug'");
            }
            resourceInputs["applicationId"] = args?.applicationId;
            resourceInputs["backchannelProviders"] = args?.backchannelProviders;
            resourceInputs["group"] = args?.group;
            resourceInputs["metaDescription"] = args?.metaDescription;
            resourceInputs["metaIcon"] = args?.metaIcon;
            resourceInputs["metaLaunchUrl"] = args?.metaLaunchUrl;
            resourceInputs["metaPublisher"] = args?.metaPublisher;
            resourceInputs["name"] = args?.name;
            resourceInputs["openInNewTab"] = args?.openInNewTab;
            resourceInputs["policyEngineMode"] = args?.policyEngineMode;
            resourceInputs["protocolProvider"] = args?.protocolProvider;
            resourceInputs["slug"] = args?.slug;
            resourceInputs["uuid"] = args?.uuid;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Application.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    applicationId?: pulumi.Input<string>;
    backchannelProviders?: pulumi.Input<pulumi.Input<number>[]>;
    group?: pulumi.Input<string>;
    metaDescription?: pulumi.Input<string>;
    metaIcon?: pulumi.Input<string>;
    metaLaunchUrl?: pulumi.Input<string>;
    metaPublisher?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    openInNewTab?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`all`" pulumi-lang-dotnet="`All`" pulumi-lang-go="`all`" pulumi-lang-python="`all`" pulumi-lang-yaml="`all`" pulumi-lang-java="`all`">`all`</span>
     *   - <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>
     *  Defaults to <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>.
     */
    policyEngineMode?: pulumi.Input<string>;
    protocolProvider?: pulumi.Input<number>;
    slug?: pulumi.Input<string>;
    /**
     * Generated.
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    applicationId?: pulumi.Input<string>;
    backchannelProviders?: pulumi.Input<pulumi.Input<number>[]>;
    group?: pulumi.Input<string>;
    metaDescription?: pulumi.Input<string>;
    metaIcon?: pulumi.Input<string>;
    metaLaunchUrl?: pulumi.Input<string>;
    metaPublisher?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    openInNewTab?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`all`" pulumi-lang-dotnet="`All`" pulumi-lang-go="`all`" pulumi-lang-python="`all`" pulumi-lang-yaml="`all`" pulumi-lang-java="`all`">`all`</span>
     *   - <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>
     *  Defaults to <span pulumi-lang-nodejs="`any`" pulumi-lang-dotnet="`Any`" pulumi-lang-go="`any`" pulumi-lang-python="`any`" pulumi-lang-yaml="`any`" pulumi-lang-java="`any`">`any`</span>.
     */
    policyEngineMode?: pulumi.Input<string>;
    protocolProvider?: pulumi.Input<number>;
    slug: pulumi.Input<string>;
    /**
     * Generated.
     */
    uuid?: pulumi.Input<string>;
}
