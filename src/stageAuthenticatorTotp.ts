// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StageAuthenticatorTotp extends pulumi.CustomResource {
    /**
     * Get an existing StageAuthenticatorTotp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StageAuthenticatorTotpState, opts?: pulumi.CustomResourceOptions): StageAuthenticatorTotp {
        return new StageAuthenticatorTotp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/stageAuthenticatorTotp:StageAuthenticatorTotp';

    /**
     * Returns true if the given object is an instance of StageAuthenticatorTotp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StageAuthenticatorTotp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StageAuthenticatorTotp.__pulumiType;
    }

    declare public readonly configureFlow: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `6` - `8` Defaults to `6`.
     */
    declare public readonly digits: pulumi.Output<string | undefined>;
    declare public readonly friendlyName: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly stageAuthenticatorTotpId: pulumi.Output<string>;

    /**
     * Create a StageAuthenticatorTotp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StageAuthenticatorTotpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StageAuthenticatorTotpArgs | StageAuthenticatorTotpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StageAuthenticatorTotpState | undefined;
            resourceInputs["configureFlow"] = state?.configureFlow;
            resourceInputs["digits"] = state?.digits;
            resourceInputs["friendlyName"] = state?.friendlyName;
            resourceInputs["name"] = state?.name;
            resourceInputs["stageAuthenticatorTotpId"] = state?.stageAuthenticatorTotpId;
        } else {
            const args = argsOrState as StageAuthenticatorTotpArgs | undefined;
            resourceInputs["configureFlow"] = args?.configureFlow;
            resourceInputs["digits"] = args?.digits;
            resourceInputs["friendlyName"] = args?.friendlyName;
            resourceInputs["name"] = args?.name;
            resourceInputs["stageAuthenticatorTotpId"] = args?.stageAuthenticatorTotpId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StageAuthenticatorTotp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StageAuthenticatorTotp resources.
 */
export interface StageAuthenticatorTotpState {
    configureFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `6` - `8` Defaults to `6`.
     */
    digits?: pulumi.Input<string>;
    friendlyName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    stageAuthenticatorTotpId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StageAuthenticatorTotp resource.
 */
export interface StageAuthenticatorTotpArgs {
    configureFlow?: pulumi.Input<string>;
    /**
     * Allowed values: - `6` - `8` Defaults to `6`.
     */
    digits?: pulumi.Input<string>;
    friendlyName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    stageAuthenticatorTotpId?: pulumi.Input<string>;
}
