// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Brand extends pulumi.CustomResource {
    /**
     * Get an existing Brand resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BrandState, opts?: pulumi.CustomResourceOptions): Brand {
        return new Brand(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/brand:Brand';

    /**
     * Returns true if the given object is an instance of Brand.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Brand {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Brand.__pulumiType;
    }

    /**
     * JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
     */
    declare public readonly attributes: pulumi.Output<string | undefined>;
    declare public readonly brandId: pulumi.Output<string>;
    declare public readonly brandingCustomCss: pulumi.Output<string | undefined>;
    /**
     * Defaults to `/static/dist/assets/images/flow_background.jpg`.
     */
    declare public readonly brandingDefaultFlowBackground: pulumi.Output<string | undefined>;
    declare public readonly brandingFavicon: pulumi.Output<string | undefined>;
    declare public readonly brandingLogo: pulumi.Output<string | undefined>;
    /**
     * Defaults to `authentik`.
     */
    declare public readonly brandingTitle: pulumi.Output<string | undefined>;
    declare public readonly clientCertificates: pulumi.Output<string[] | undefined>;
    /**
     * Defaults to `false`.
     */
    declare public readonly default: pulumi.Output<boolean | undefined>;
    declare public readonly defaultApplication: pulumi.Output<string | undefined>;
    declare public readonly domain: pulumi.Output<string>;
    declare public readonly flowAuthentication: pulumi.Output<string | undefined>;
    declare public readonly flowDeviceCode: pulumi.Output<string | undefined>;
    declare public readonly flowInvalidation: pulumi.Output<string | undefined>;
    declare public readonly flowRecovery: pulumi.Output<string | undefined>;
    declare public readonly flowUnenrollment: pulumi.Output<string | undefined>;
    declare public readonly flowUserSettings: pulumi.Output<string | undefined>;
    declare public readonly webCertificate: pulumi.Output<string | undefined>;

    /**
     * Create a Brand resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BrandArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BrandArgs | BrandState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BrandState | undefined;
            resourceInputs["attributes"] = state?.attributes;
            resourceInputs["brandId"] = state?.brandId;
            resourceInputs["brandingCustomCss"] = state?.brandingCustomCss;
            resourceInputs["brandingDefaultFlowBackground"] = state?.brandingDefaultFlowBackground;
            resourceInputs["brandingFavicon"] = state?.brandingFavicon;
            resourceInputs["brandingLogo"] = state?.brandingLogo;
            resourceInputs["brandingTitle"] = state?.brandingTitle;
            resourceInputs["clientCertificates"] = state?.clientCertificates;
            resourceInputs["default"] = state?.default;
            resourceInputs["defaultApplication"] = state?.defaultApplication;
            resourceInputs["domain"] = state?.domain;
            resourceInputs["flowAuthentication"] = state?.flowAuthentication;
            resourceInputs["flowDeviceCode"] = state?.flowDeviceCode;
            resourceInputs["flowInvalidation"] = state?.flowInvalidation;
            resourceInputs["flowRecovery"] = state?.flowRecovery;
            resourceInputs["flowUnenrollment"] = state?.flowUnenrollment;
            resourceInputs["flowUserSettings"] = state?.flowUserSettings;
            resourceInputs["webCertificate"] = state?.webCertificate;
        } else {
            const args = argsOrState as BrandArgs | undefined;
            if (args?.domain === undefined && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["attributes"] = args?.attributes;
            resourceInputs["brandId"] = args?.brandId;
            resourceInputs["brandingCustomCss"] = args?.brandingCustomCss;
            resourceInputs["brandingDefaultFlowBackground"] = args?.brandingDefaultFlowBackground;
            resourceInputs["brandingFavicon"] = args?.brandingFavicon;
            resourceInputs["brandingLogo"] = args?.brandingLogo;
            resourceInputs["brandingTitle"] = args?.brandingTitle;
            resourceInputs["clientCertificates"] = args?.clientCertificates;
            resourceInputs["default"] = args?.default;
            resourceInputs["defaultApplication"] = args?.defaultApplication;
            resourceInputs["domain"] = args?.domain;
            resourceInputs["flowAuthentication"] = args?.flowAuthentication;
            resourceInputs["flowDeviceCode"] = args?.flowDeviceCode;
            resourceInputs["flowInvalidation"] = args?.flowInvalidation;
            resourceInputs["flowRecovery"] = args?.flowRecovery;
            resourceInputs["flowUnenrollment"] = args?.flowUnenrollment;
            resourceInputs["flowUserSettings"] = args?.flowUserSettings;
            resourceInputs["webCertificate"] = args?.webCertificate;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Brand.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Brand resources.
 */
export interface BrandState {
    /**
     * JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
     */
    attributes?: pulumi.Input<string>;
    brandId?: pulumi.Input<string>;
    brandingCustomCss?: pulumi.Input<string>;
    /**
     * Defaults to `/static/dist/assets/images/flow_background.jpg`.
     */
    brandingDefaultFlowBackground?: pulumi.Input<string>;
    brandingFavicon?: pulumi.Input<string>;
    brandingLogo?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    brandingTitle?: pulumi.Input<string>;
    clientCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defaults to `false`.
     */
    default?: pulumi.Input<boolean>;
    defaultApplication?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    flowAuthentication?: pulumi.Input<string>;
    flowDeviceCode?: pulumi.Input<string>;
    flowInvalidation?: pulumi.Input<string>;
    flowRecovery?: pulumi.Input<string>;
    flowUnenrollment?: pulumi.Input<string>;
    flowUserSettings?: pulumi.Input<string>;
    webCertificate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Brand resource.
 */
export interface BrandArgs {
    /**
     * JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
     */
    attributes?: pulumi.Input<string>;
    brandId?: pulumi.Input<string>;
    brandingCustomCss?: pulumi.Input<string>;
    /**
     * Defaults to `/static/dist/assets/images/flow_background.jpg`.
     */
    brandingDefaultFlowBackground?: pulumi.Input<string>;
    brandingFavicon?: pulumi.Input<string>;
    brandingLogo?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    brandingTitle?: pulumi.Input<string>;
    clientCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defaults to `false`.
     */
    default?: pulumi.Input<boolean>;
    defaultApplication?: pulumi.Input<string>;
    domain: pulumi.Input<string>;
    flowAuthentication?: pulumi.Input<string>;
    flowDeviceCode?: pulumi.Input<string>;
    flowInvalidation?: pulumi.Input<string>;
    flowRecovery?: pulumi.Input<string>;
    flowUnenrollment?: pulumi.Input<string>;
    flowUserSettings?: pulumi.Input<string>;
    webCertificate?: pulumi.Input<string>;
}
