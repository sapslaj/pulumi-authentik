// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StageRedirect extends pulumi.CustomResource {
    /**
     * Get an existing StageRedirect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StageRedirectState, opts?: pulumi.CustomResourceOptions): StageRedirect {
        return new StageRedirect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/stageRedirect:StageRedirect';

    /**
     * Returns true if the given object is an instance of StageRedirect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StageRedirect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StageRedirect.__pulumiType;
    }

    /**
     * Defaults to `true`.
     */
    declare public readonly keepContext: pulumi.Output<boolean | undefined>;
    /**
     * Allowed values: - `static` - `flow` Defaults to `flow`.
     */
    declare public readonly mode: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly stageRedirectId: pulumi.Output<string>;
    declare public readonly targetFlow: pulumi.Output<string | undefined>;
    declare public readonly targetStatic: pulumi.Output<string | undefined>;

    /**
     * Create a StageRedirect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StageRedirectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StageRedirectArgs | StageRedirectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StageRedirectState | undefined;
            resourceInputs["keepContext"] = state?.keepContext;
            resourceInputs["mode"] = state?.mode;
            resourceInputs["name"] = state?.name;
            resourceInputs["stageRedirectId"] = state?.stageRedirectId;
            resourceInputs["targetFlow"] = state?.targetFlow;
            resourceInputs["targetStatic"] = state?.targetStatic;
        } else {
            const args = argsOrState as StageRedirectArgs | undefined;
            resourceInputs["keepContext"] = args?.keepContext;
            resourceInputs["mode"] = args?.mode;
            resourceInputs["name"] = args?.name;
            resourceInputs["stageRedirectId"] = args?.stageRedirectId;
            resourceInputs["targetFlow"] = args?.targetFlow;
            resourceInputs["targetStatic"] = args?.targetStatic;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StageRedirect.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StageRedirect resources.
 */
export interface StageRedirectState {
    /**
     * Defaults to `true`.
     */
    keepContext?: pulumi.Input<boolean>;
    /**
     * Allowed values: - `static` - `flow` Defaults to `flow`.
     */
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    stageRedirectId?: pulumi.Input<string>;
    targetFlow?: pulumi.Input<string>;
    targetStatic?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StageRedirect resource.
 */
export interface StageRedirectArgs {
    /**
     * Defaults to `true`.
     */
    keepContext?: pulumi.Input<boolean>;
    /**
     * Allowed values: - `static` - `flow` Defaults to `flow`.
     */
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    stageRedirectId?: pulumi.Input<string>;
    targetFlow?: pulumi.Input<string>;
    targetStatic?: pulumi.Input<string>;
}
