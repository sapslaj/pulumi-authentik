// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StageEmail extends pulumi.CustomResource {
    /**
     * Get an existing StageEmail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StageEmailState, opts?: pulumi.CustomResourceOptions): StageEmail {
        return new StageEmail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/stageEmail:StageEmail';

    /**
     * Returns true if the given object is an instance of StageEmail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StageEmail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StageEmail.__pulumiType;
    }

    /**
     * Defaults to `false`.
     */
    declare public readonly activateUserOnSuccess: pulumi.Output<boolean | undefined>;
    /**
     * Defaults to `system@authentik.local`.
     */
    declare public readonly fromAddress: pulumi.Output<string | undefined>;
    /**
     * Defaults to `localhost`.
     */
    declare public readonly host: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Defaults to `25`.
     */
    declare public readonly port: pulumi.Output<number | undefined>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=5`.
     */
    declare public readonly recoveryCacheTimeout: pulumi.Output<string | undefined>;
    /**
     * Defaults to `5`.
     */
    declare public readonly recoveryMaxAttempts: pulumi.Output<number | undefined>;
    declare public readonly stageEmailId: pulumi.Output<string>;
    /**
     * Defaults to `authentik`.
     */
    declare public readonly subject: pulumi.Output<string | undefined>;
    /**
     * Defaults to `email/password_reset.html`.
     */
    declare public readonly template: pulumi.Output<string | undefined>;
    /**
     * Defaults to `30`.
     */
    declare public readonly timeout: pulumi.Output<number | undefined>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=30`.
     */
    declare public readonly tokenExpiry: pulumi.Output<string | undefined>;
    /**
     * Defaults to `true`.
     */
    declare public readonly useGlobalSettings: pulumi.Output<boolean | undefined>;
    declare public readonly useSsl: pulumi.Output<boolean | undefined>;
    declare public readonly useTls: pulumi.Output<boolean | undefined>;
    declare public readonly username: pulumi.Output<string | undefined>;

    /**
     * Create a StageEmail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StageEmailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StageEmailArgs | StageEmailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StageEmailState | undefined;
            resourceInputs["activateUserOnSuccess"] = state?.activateUserOnSuccess;
            resourceInputs["fromAddress"] = state?.fromAddress;
            resourceInputs["host"] = state?.host;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["port"] = state?.port;
            resourceInputs["recoveryCacheTimeout"] = state?.recoveryCacheTimeout;
            resourceInputs["recoveryMaxAttempts"] = state?.recoveryMaxAttempts;
            resourceInputs["stageEmailId"] = state?.stageEmailId;
            resourceInputs["subject"] = state?.subject;
            resourceInputs["template"] = state?.template;
            resourceInputs["timeout"] = state?.timeout;
            resourceInputs["tokenExpiry"] = state?.tokenExpiry;
            resourceInputs["useGlobalSettings"] = state?.useGlobalSettings;
            resourceInputs["useSsl"] = state?.useSsl;
            resourceInputs["useTls"] = state?.useTls;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as StageEmailArgs | undefined;
            resourceInputs["activateUserOnSuccess"] = args?.activateUserOnSuccess;
            resourceInputs["fromAddress"] = args?.fromAddress;
            resourceInputs["host"] = args?.host;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args?.port;
            resourceInputs["recoveryCacheTimeout"] = args?.recoveryCacheTimeout;
            resourceInputs["recoveryMaxAttempts"] = args?.recoveryMaxAttempts;
            resourceInputs["stageEmailId"] = args?.stageEmailId;
            resourceInputs["subject"] = args?.subject;
            resourceInputs["template"] = args?.template;
            resourceInputs["timeout"] = args?.timeout;
            resourceInputs["tokenExpiry"] = args?.tokenExpiry;
            resourceInputs["useGlobalSettings"] = args?.useGlobalSettings;
            resourceInputs["useSsl"] = args?.useSsl;
            resourceInputs["useTls"] = args?.useTls;
            resourceInputs["username"] = args?.username;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StageEmail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StageEmail resources.
 */
export interface StageEmailState {
    /**
     * Defaults to `false`.
     */
    activateUserOnSuccess?: pulumi.Input<boolean>;
    /**
     * Defaults to `system@authentik.local`.
     */
    fromAddress?: pulumi.Input<string>;
    /**
     * Defaults to `localhost`.
     */
    host?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * Defaults to `25`.
     */
    port?: pulumi.Input<number>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=5`.
     */
    recoveryCacheTimeout?: pulumi.Input<string>;
    /**
     * Defaults to `5`.
     */
    recoveryMaxAttempts?: pulumi.Input<number>;
    stageEmailId?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    subject?: pulumi.Input<string>;
    /**
     * Defaults to `email/password_reset.html`.
     */
    template?: pulumi.Input<string>;
    /**
     * Defaults to `30`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=30`.
     */
    tokenExpiry?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    useGlobalSettings?: pulumi.Input<boolean>;
    useSsl?: pulumi.Input<boolean>;
    useTls?: pulumi.Input<boolean>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StageEmail resource.
 */
export interface StageEmailArgs {
    /**
     * Defaults to `false`.
     */
    activateUserOnSuccess?: pulumi.Input<boolean>;
    /**
     * Defaults to `system@authentik.local`.
     */
    fromAddress?: pulumi.Input<string>;
    /**
     * Defaults to `localhost`.
     */
    host?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * Defaults to `25`.
     */
    port?: pulumi.Input<number>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=5`.
     */
    recoveryCacheTimeout?: pulumi.Input<string>;
    /**
     * Defaults to `5`.
     */
    recoveryMaxAttempts?: pulumi.Input<number>;
    stageEmailId?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    subject?: pulumi.Input<string>;
    /**
     * Defaults to `email/password_reset.html`.
     */
    template?: pulumi.Input<string>;
    /**
     * Defaults to `30`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=30`.
     */
    tokenExpiry?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    useGlobalSettings?: pulumi.Input<boolean>;
    useSsl?: pulumi.Input<boolean>;
    useTls?: pulumi.Input<boolean>;
    username?: pulumi.Input<string>;
}
