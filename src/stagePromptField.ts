// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StagePromptField extends pulumi.CustomResource {
    /**
     * Get an existing StagePromptField resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StagePromptFieldState, opts?: pulumi.CustomResourceOptions): StagePromptField {
        return new StagePromptField(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/stagePromptField:StagePromptField';

    /**
     * Returns true if the given object is an instance of StagePromptField.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StagePromptField {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StagePromptField.__pulumiType;
    }

    declare public readonly fieldKey: pulumi.Output<string>;
    declare public readonly initialValue: pulumi.Output<string | undefined>;
    /**
     * Defaults to `false`.
     */
    declare public readonly initialValueExpression: pulumi.Output<boolean | undefined>;
    declare public readonly label: pulumi.Output<string>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly order: pulumi.Output<number | undefined>;
    declare public readonly placeholder: pulumi.Output<string | undefined>;
    /**
     * Defaults to `false`.
     */
    declare public readonly placeholderExpression: pulumi.Output<boolean | undefined>;
    /**
     * Defaults to `false`.
     */
    declare public readonly required: pulumi.Output<boolean | undefined>;
    declare public readonly stagePromptFieldId: pulumi.Output<string>;
    /**
     * Defaults to ``.
     */
    declare public readonly subText: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -
     * `number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -
     * `static` - `ak-locale`
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a StagePromptField resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StagePromptFieldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StagePromptFieldArgs | StagePromptFieldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StagePromptFieldState | undefined;
            resourceInputs["fieldKey"] = state?.fieldKey;
            resourceInputs["initialValue"] = state?.initialValue;
            resourceInputs["initialValueExpression"] = state?.initialValueExpression;
            resourceInputs["label"] = state?.label;
            resourceInputs["name"] = state?.name;
            resourceInputs["order"] = state?.order;
            resourceInputs["placeholder"] = state?.placeholder;
            resourceInputs["placeholderExpression"] = state?.placeholderExpression;
            resourceInputs["required"] = state?.required;
            resourceInputs["stagePromptFieldId"] = state?.stagePromptFieldId;
            resourceInputs["subText"] = state?.subText;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as StagePromptFieldArgs | undefined;
            if (args?.fieldKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'fieldKey'");
            }
            if (args?.label === undefined && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["fieldKey"] = args?.fieldKey;
            resourceInputs["initialValue"] = args?.initialValue;
            resourceInputs["initialValueExpression"] = args?.initialValueExpression;
            resourceInputs["label"] = args?.label;
            resourceInputs["name"] = args?.name;
            resourceInputs["order"] = args?.order;
            resourceInputs["placeholder"] = args?.placeholder;
            resourceInputs["placeholderExpression"] = args?.placeholderExpression;
            resourceInputs["required"] = args?.required;
            resourceInputs["stagePromptFieldId"] = args?.stagePromptFieldId;
            resourceInputs["subText"] = args?.subText;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StagePromptField.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StagePromptField resources.
 */
export interface StagePromptFieldState {
    fieldKey?: pulumi.Input<string>;
    initialValue?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    initialValueExpression?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    placeholder?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    placeholderExpression?: pulumi.Input<boolean>;
    /**
     * Defaults to `false`.
     */
    required?: pulumi.Input<boolean>;
    stagePromptFieldId?: pulumi.Input<string>;
    /**
     * Defaults to ``.
     */
    subText?: pulumi.Input<string>;
    /**
     * Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -
     * `number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -
     * `static` - `ak-locale`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StagePromptField resource.
 */
export interface StagePromptFieldArgs {
    fieldKey: pulumi.Input<string>;
    initialValue?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    initialValueExpression?: pulumi.Input<boolean>;
    label: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    placeholder?: pulumi.Input<string>;
    /**
     * Defaults to `false`.
     */
    placeholderExpression?: pulumi.Input<boolean>;
    /**
     * Defaults to `false`.
     */
    required?: pulumi.Input<boolean>;
    stagePromptFieldId?: pulumi.Input<string>;
    /**
     * Defaults to ``.
     */
    subText?: pulumi.Input<string>;
    /**
     * Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -
     * `number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -
     * `static` - `ak-locale`
     */
    type: pulumi.Input<string>;
}
