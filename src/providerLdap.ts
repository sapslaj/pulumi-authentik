// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProviderLdap extends pulumi.CustomResource {
    /**
     * Get an existing ProviderLdap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProviderLdapState, opts?: pulumi.CustomResourceOptions): ProviderLdap {
        return new ProviderLdap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/providerLdap:ProviderLdap';

    /**
     * Returns true if the given object is an instance of ProviderLdap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProviderLdap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProviderLdap.__pulumiType;
    }

    declare public readonly baseDn: pulumi.Output<string>;
    declare public readonly bindFlow: pulumi.Output<string>;
    /**
     * Defaults to `direct`.
     */
    declare public readonly bindMode: pulumi.Output<string | undefined>;
    declare public readonly certificate: pulumi.Output<string | undefined>;
    /**
     * Defaults to `4000`.
     */
    declare public readonly gidStartNumber: pulumi.Output<number | undefined>;
    /**
     * Defaults to `true`.
     */
    declare public readonly mfaSupport: pulumi.Output<boolean | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly providerLdapId: pulumi.Output<string>;
    /**
     * Defaults to `direct`.
     */
    declare public readonly searchMode: pulumi.Output<string | undefined>;
    declare public readonly tlsServerName: pulumi.Output<string | undefined>;
    /**
     * Defaults to `2000`.
     */
    declare public readonly uidStartNumber: pulumi.Output<number | undefined>;
    declare public readonly unbindFlow: pulumi.Output<string>;

    /**
     * Create a ProviderLdap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderLdapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProviderLdapArgs | ProviderLdapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProviderLdapState | undefined;
            resourceInputs["baseDn"] = state?.baseDn;
            resourceInputs["bindFlow"] = state?.bindFlow;
            resourceInputs["bindMode"] = state?.bindMode;
            resourceInputs["certificate"] = state?.certificate;
            resourceInputs["gidStartNumber"] = state?.gidStartNumber;
            resourceInputs["mfaSupport"] = state?.mfaSupport;
            resourceInputs["name"] = state?.name;
            resourceInputs["providerLdapId"] = state?.providerLdapId;
            resourceInputs["searchMode"] = state?.searchMode;
            resourceInputs["tlsServerName"] = state?.tlsServerName;
            resourceInputs["uidStartNumber"] = state?.uidStartNumber;
            resourceInputs["unbindFlow"] = state?.unbindFlow;
        } else {
            const args = argsOrState as ProviderLdapArgs | undefined;
            if (args?.baseDn === undefined && !opts.urn) {
                throw new Error("Missing required property 'baseDn'");
            }
            if (args?.bindFlow === undefined && !opts.urn) {
                throw new Error("Missing required property 'bindFlow'");
            }
            if (args?.unbindFlow === undefined && !opts.urn) {
                throw new Error("Missing required property 'unbindFlow'");
            }
            resourceInputs["baseDn"] = args?.baseDn;
            resourceInputs["bindFlow"] = args?.bindFlow;
            resourceInputs["bindMode"] = args?.bindMode;
            resourceInputs["certificate"] = args?.certificate;
            resourceInputs["gidStartNumber"] = args?.gidStartNumber;
            resourceInputs["mfaSupport"] = args?.mfaSupport;
            resourceInputs["name"] = args?.name;
            resourceInputs["providerLdapId"] = args?.providerLdapId;
            resourceInputs["searchMode"] = args?.searchMode;
            resourceInputs["tlsServerName"] = args?.tlsServerName;
            resourceInputs["uidStartNumber"] = args?.uidStartNumber;
            resourceInputs["unbindFlow"] = args?.unbindFlow;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProviderLdap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProviderLdap resources.
 */
export interface ProviderLdapState {
    baseDn?: pulumi.Input<string>;
    bindFlow?: pulumi.Input<string>;
    /**
     * Defaults to `direct`.
     */
    bindMode?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    /**
     * Defaults to `4000`.
     */
    gidStartNumber?: pulumi.Input<number>;
    /**
     * Defaults to `true`.
     */
    mfaSupport?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    providerLdapId?: pulumi.Input<string>;
    /**
     * Defaults to `direct`.
     */
    searchMode?: pulumi.Input<string>;
    tlsServerName?: pulumi.Input<string>;
    /**
     * Defaults to `2000`.
     */
    uidStartNumber?: pulumi.Input<number>;
    unbindFlow?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProviderLdap resource.
 */
export interface ProviderLdapArgs {
    baseDn: pulumi.Input<string>;
    bindFlow: pulumi.Input<string>;
    /**
     * Defaults to `direct`.
     */
    bindMode?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    /**
     * Defaults to `4000`.
     */
    gidStartNumber?: pulumi.Input<number>;
    /**
     * Defaults to `true`.
     */
    mfaSupport?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    providerLdapId?: pulumi.Input<string>;
    /**
     * Defaults to `direct`.
     */
    searchMode?: pulumi.Input<string>;
    tlsServerName?: pulumi.Input<string>;
    /**
     * Defaults to `2000`.
     */
    uidStartNumber?: pulumi.Input<number>;
    unbindFlow: pulumi.Input<string>;
}
