// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSource(args?: GetSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSourceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("authentik:index/getSource:getSource", {
        "id": args.id,
        "managed": args.managed,
        "slug": args.slug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSource.
 */
export interface GetSourceArgs {
    id?: string;
    managed?: string;
    slug?: string;
}

/**
 * A collection of values returned by getSource.
 */
export interface GetSourceResult {
    readonly id: string;
    readonly managed: string;
    readonly name: string;
    readonly slug: string;
    readonly uuid: string;
}
export function getSourceOutput(args?: GetSourceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSourceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("authentik:index/getSource:getSource", {
        "id": args.id,
        "managed": args.managed,
        "slug": args.slug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSource.
 */
export interface GetSourceOutputArgs {
    id?: pulumi.Input<string>;
    managed?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
}
