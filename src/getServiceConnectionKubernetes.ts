// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceConnectionKubernetes(args: GetServiceConnectionKubernetesArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceConnectionKubernetesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("authentik:index/getServiceConnectionKubernetes:getServiceConnectionKubernetes", {
        "id": args.id,
        "kubeconfig": args.kubeconfig,
        "local": args.local,
        "name": args.name,
        "verifySsl": args.verifySsl,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceConnectionKubernetes.
 */
export interface GetServiceConnectionKubernetesArgs {
    id?: string;
    kubeconfig?: string;
    local?: boolean;
    name: string;
    verifySsl?: boolean;
}

/**
 * A collection of values returned by getServiceConnectionKubernetes.
 */
export interface GetServiceConnectionKubernetesResult {
    readonly id: string;
    readonly kubeconfig: string;
    readonly local: boolean;
    readonly name: string;
    readonly verifySsl: boolean;
}
export function getServiceConnectionKubernetesOutput(args: GetServiceConnectionKubernetesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceConnectionKubernetesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("authentik:index/getServiceConnectionKubernetes:getServiceConnectionKubernetes", {
        "id": args.id,
        "kubeconfig": args.kubeconfig,
        "local": args.local,
        "name": args.name,
        "verifySsl": args.verifySsl,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceConnectionKubernetes.
 */
export interface GetServiceConnectionKubernetesOutputArgs {
    id?: pulumi.Input<string>;
    kubeconfig?: pulumi.Input<string>;
    local?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    verifySsl?: pulumi.Input<boolean>;
}
