// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PolicyGeoip extends pulumi.CustomResource {
    /**
     * Get an existing PolicyGeoip resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyGeoipState, opts?: pulumi.CustomResourceOptions): PolicyGeoip {
        return new PolicyGeoip(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/policyGeoip:PolicyGeoip';

    /**
     * Returns true if the given object is an instance of PolicyGeoip.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyGeoip {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyGeoip.__pulumiType;
    }

    declare public readonly asns: pulumi.Output<number[] | undefined>;
    declare public readonly checkHistoryDistance: pulumi.Output<boolean | undefined>;
    declare public readonly checkImpossibleTravel: pulumi.Output<boolean | undefined>;
    /**
     * Allowed values:
     *   - `AF`
     *   - `AX`
     *   - `AL`
     *   - `DZ`
     *   - `AS`
     *   - `AD`
     *   - `AO`
     *   - `AI`
     *   - `AQ`
     *   - `AG`
     *   - `AR`
     *   - `AM`
     *   - `AW`
     *   - `AU`
     *   - `AT`
     *   - `AZ`
     *   - `BS`
     *   - `BH`
     *   - `BD`
     *   - `BB`
     *   - `BY`
     *   - `BE`
     *   - `BZ`
     *   - `BJ`
     *   - `BM`
     *   - `BT`
     *   - `BO`
     *   - `BQ`
     *   - `BA`
     *   - `BW`
     *   - `BV`
     *   - `BR`
     *   - `IO`
     *   - `BN`
     *   - `BG`
     *   - `BF`
     *   - `BI`
     *   - `CV`
     *   - `KH`
     *   - `CM`
     *   - `CA`
     *   - `KY`
     *   - `CF`
     *   - `TD`
     *   - `CL`
     *   - `CN`
     *   - `CX`
     *   - `CC`
     *   - `CO`
     *   - `KM`
     *   - `CG`
     *   - `CD`
     *   - `CK`
     *   - `CR`
     *   - `CI`
     *   - `HR`
     *   - `CU`
     *   - `CW`
     *   - `CY`
     *   - `CZ`
     *   - `DK`
     *   - `DJ`
     *   - `DM`
     *   - `DO`
     *   - `EC`
     *   - `EG`
     *   - `SV`
     *   - `GQ`
     *   - `ER`
     *   - `EE`
     *   - `SZ`
     *   - `ET`
     *   - `FK`
     *   - `FO`
     *   - `FJ`
     *   - `FI`
     *   - `FR`
     *   - `GF`
     *   - `PF`
     *   - `TF`
     *   - `GA`
     *   - `GM`
     *   - `GE`
     *   - `DE`
     *   - `GH`
     *   - `GI`
     *   - `GR`
     *   - `GL`
     *   - `GD`
     *   - `GP`
     *   - `GU`
     *   - `GT`
     *   - `GG`
     *   - `GN`
     *   - `GW`
     *   - `GY`
     *   - `HT`
     *   - `HM`
     *   - `VA`
     *   - `HN`
     *   - `HK`
     *   - `HU`
     *   - `IS`
     *   - `IN`
     *   - `ID`
     *   - `IR`
     *   - `IQ`
     *   - `IE`
     *   - `IM`
     *   - `IL`
     *   - `IT`
     *   - `JM`
     *   - `JP`
     *   - `JE`
     *   - `JO`
     *   - `KZ`
     *   - `KE`
     *   - `KI`
     *   - `KW`
     *   - `KG`
     *   - `LA`
     *   - `LV`
     *   - `LB`
     *   - `LS`
     *   - `LR`
     *   - `LY`
     *   - `LI`
     *   - `LT`
     *   - `LU`
     *   - `MO`
     *   - `MG`
     *   - `MW`
     *   - `MY`
     *   - `MV`
     *   - `ML`
     *   - `MT`
     *   - `MH`
     *   - `MQ`
     *   - `MR`
     *   - `MU`
     *   - `YT`
     *   - `MX`
     *   - `FM`
     *   - `MD`
     *   - `MC`
     *   - `MN`
     *   - `ME`
     *   - `MS`
     *   - `MA`
     *   - `MZ`
     *   - `MM`
     *   - `NA`
     *   - `NR`
     *   - `NP`
     *   - `NL`
     *   - `NC`
     *   - `NZ`
     *   - `NI`
     *   - `NE`
     *   - `NG`
     *   - `NU`
     *   - `NF`
     *   - `KP`
     *   - `MK`
     *   - `MP`
     *   - `NO`
     *   - `OM`
     *   - `PK`
     *   - `PW`
     *   - `PS`
     *   - `PA`
     *   - `PG`
     *   - `PY`
     *   - `PE`
     *   - `PH`
     *   - `PN`
     *   - `PL`
     *   - `PT`
     *   - `PR`
     *   - `QA`
     *   - `RE`
     *   - `RO`
     *   - `RU`
     *   - `RW`
     *   - `BL`
     *   - `SH`
     *   - `KN`
     *   - `LC`
     *   - `MF`
     *   - `PM`
     *   - `VC`
     *   - `WS`
     *   - `SM`
     *   - `ST`
     *   - `SA`
     *   - `SN`
     *   - `RS`
     *   - `SC`
     *   - `SL`
     *   - `SG`
     *   - `SX`
     *   - `SK`
     *   - `SI`
     *   - `SB`
     *   - `SO`
     *   - `ZA`
     *   - `GS`
     *   - `KR`
     *   - `SS`
     *   - `ES`
     *   - `LK`
     *   - `SD`
     *   - `SR`
     *   - `SJ`
     *   - `SE`
     *   - `CH`
     *   - `SY`
     *   - `TW`
     *   - `TJ`
     *   - `TZ`
     *   - `TH`
     *   - `TL`
     *   - `TG`
     *   - `TK`
     *   - `TO`
     *   - `TT`
     *   - `TN`
     *   - `TR`
     *   - `TM`
     *   - `TC`
     *   - `TV`
     *   - `UG`
     *   - `UA`
     *   - `AE`
     *   - `GB`
     *   - `UM`
     *   - `US`
     *   - `UY`
     *   - `UZ`
     *   - `VU`
     *   - `VE`
     *   - `VN`
     *   - `VG`
     *   - `VI`
     *   - `WF`
     *   - `EH`
     *   - `YE`
     *   - `ZM`
     *   - `ZW`
     */
    declare public readonly countries: pulumi.Output<string[] | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`50`" pulumi-lang-dotnet="`50`" pulumi-lang-go="`50`" pulumi-lang-python="`50`" pulumi-lang-yaml="`50`" pulumi-lang-java="`50`">`50`</span>.
     */
    declare public readonly distanceToleranceKm: pulumi.Output<number | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    declare public readonly executionLogging: pulumi.Output<boolean | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`5`" pulumi-lang-dotnet="`5`" pulumi-lang-go="`5`" pulumi-lang-python="`5`" pulumi-lang-yaml="`5`" pulumi-lang-java="`5`">`5`</span>.
     */
    declare public readonly historyLoginCount: pulumi.Output<number | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`100`" pulumi-lang-dotnet="`100`" pulumi-lang-go="`100`" pulumi-lang-python="`100`" pulumi-lang-yaml="`100`" pulumi-lang-java="`100`">`100`</span>.
     */
    declare public readonly historyMaxDistanceKm: pulumi.Output<number | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`100`" pulumi-lang-dotnet="`100`" pulumi-lang-go="`100`" pulumi-lang-python="`100`" pulumi-lang-yaml="`100`" pulumi-lang-java="`100`">`100`</span>.
     */
    declare public readonly impossibleToleranceKm: pulumi.Output<number | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly policyGeoipId: pulumi.Output<string>;

    /**
     * Create a PolicyGeoip resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PolicyGeoipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyGeoipArgs | PolicyGeoipState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyGeoipState | undefined;
            resourceInputs["asns"] = state?.asns;
            resourceInputs["checkHistoryDistance"] = state?.checkHistoryDistance;
            resourceInputs["checkImpossibleTravel"] = state?.checkImpossibleTravel;
            resourceInputs["countries"] = state?.countries;
            resourceInputs["distanceToleranceKm"] = state?.distanceToleranceKm;
            resourceInputs["executionLogging"] = state?.executionLogging;
            resourceInputs["historyLoginCount"] = state?.historyLoginCount;
            resourceInputs["historyMaxDistanceKm"] = state?.historyMaxDistanceKm;
            resourceInputs["impossibleToleranceKm"] = state?.impossibleToleranceKm;
            resourceInputs["name"] = state?.name;
            resourceInputs["policyGeoipId"] = state?.policyGeoipId;
        } else {
            const args = argsOrState as PolicyGeoipArgs | undefined;
            resourceInputs["asns"] = args?.asns;
            resourceInputs["checkHistoryDistance"] = args?.checkHistoryDistance;
            resourceInputs["checkImpossibleTravel"] = args?.checkImpossibleTravel;
            resourceInputs["countries"] = args?.countries;
            resourceInputs["distanceToleranceKm"] = args?.distanceToleranceKm;
            resourceInputs["executionLogging"] = args?.executionLogging;
            resourceInputs["historyLoginCount"] = args?.historyLoginCount;
            resourceInputs["historyMaxDistanceKm"] = args?.historyMaxDistanceKm;
            resourceInputs["impossibleToleranceKm"] = args?.impossibleToleranceKm;
            resourceInputs["name"] = args?.name;
            resourceInputs["policyGeoipId"] = args?.policyGeoipId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyGeoip.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyGeoip resources.
 */
export interface PolicyGeoipState {
    asns?: pulumi.Input<pulumi.Input<number>[]>;
    checkHistoryDistance?: pulumi.Input<boolean>;
    checkImpossibleTravel?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - `AF`
     *   - `AX`
     *   - `AL`
     *   - `DZ`
     *   - `AS`
     *   - `AD`
     *   - `AO`
     *   - `AI`
     *   - `AQ`
     *   - `AG`
     *   - `AR`
     *   - `AM`
     *   - `AW`
     *   - `AU`
     *   - `AT`
     *   - `AZ`
     *   - `BS`
     *   - `BH`
     *   - `BD`
     *   - `BB`
     *   - `BY`
     *   - `BE`
     *   - `BZ`
     *   - `BJ`
     *   - `BM`
     *   - `BT`
     *   - `BO`
     *   - `BQ`
     *   - `BA`
     *   - `BW`
     *   - `BV`
     *   - `BR`
     *   - `IO`
     *   - `BN`
     *   - `BG`
     *   - `BF`
     *   - `BI`
     *   - `CV`
     *   - `KH`
     *   - `CM`
     *   - `CA`
     *   - `KY`
     *   - `CF`
     *   - `TD`
     *   - `CL`
     *   - `CN`
     *   - `CX`
     *   - `CC`
     *   - `CO`
     *   - `KM`
     *   - `CG`
     *   - `CD`
     *   - `CK`
     *   - `CR`
     *   - `CI`
     *   - `HR`
     *   - `CU`
     *   - `CW`
     *   - `CY`
     *   - `CZ`
     *   - `DK`
     *   - `DJ`
     *   - `DM`
     *   - `DO`
     *   - `EC`
     *   - `EG`
     *   - `SV`
     *   - `GQ`
     *   - `ER`
     *   - `EE`
     *   - `SZ`
     *   - `ET`
     *   - `FK`
     *   - `FO`
     *   - `FJ`
     *   - `FI`
     *   - `FR`
     *   - `GF`
     *   - `PF`
     *   - `TF`
     *   - `GA`
     *   - `GM`
     *   - `GE`
     *   - `DE`
     *   - `GH`
     *   - `GI`
     *   - `GR`
     *   - `GL`
     *   - `GD`
     *   - `GP`
     *   - `GU`
     *   - `GT`
     *   - `GG`
     *   - `GN`
     *   - `GW`
     *   - `GY`
     *   - `HT`
     *   - `HM`
     *   - `VA`
     *   - `HN`
     *   - `HK`
     *   - `HU`
     *   - `IS`
     *   - `IN`
     *   - `ID`
     *   - `IR`
     *   - `IQ`
     *   - `IE`
     *   - `IM`
     *   - `IL`
     *   - `IT`
     *   - `JM`
     *   - `JP`
     *   - `JE`
     *   - `JO`
     *   - `KZ`
     *   - `KE`
     *   - `KI`
     *   - `KW`
     *   - `KG`
     *   - `LA`
     *   - `LV`
     *   - `LB`
     *   - `LS`
     *   - `LR`
     *   - `LY`
     *   - `LI`
     *   - `LT`
     *   - `LU`
     *   - `MO`
     *   - `MG`
     *   - `MW`
     *   - `MY`
     *   - `MV`
     *   - `ML`
     *   - `MT`
     *   - `MH`
     *   - `MQ`
     *   - `MR`
     *   - `MU`
     *   - `YT`
     *   - `MX`
     *   - `FM`
     *   - `MD`
     *   - `MC`
     *   - `MN`
     *   - `ME`
     *   - `MS`
     *   - `MA`
     *   - `MZ`
     *   - `MM`
     *   - `NA`
     *   - `NR`
     *   - `NP`
     *   - `NL`
     *   - `NC`
     *   - `NZ`
     *   - `NI`
     *   - `NE`
     *   - `NG`
     *   - `NU`
     *   - `NF`
     *   - `KP`
     *   - `MK`
     *   - `MP`
     *   - `NO`
     *   - `OM`
     *   - `PK`
     *   - `PW`
     *   - `PS`
     *   - `PA`
     *   - `PG`
     *   - `PY`
     *   - `PE`
     *   - `PH`
     *   - `PN`
     *   - `PL`
     *   - `PT`
     *   - `PR`
     *   - `QA`
     *   - `RE`
     *   - `RO`
     *   - `RU`
     *   - `RW`
     *   - `BL`
     *   - `SH`
     *   - `KN`
     *   - `LC`
     *   - `MF`
     *   - `PM`
     *   - `VC`
     *   - `WS`
     *   - `SM`
     *   - `ST`
     *   - `SA`
     *   - `SN`
     *   - `RS`
     *   - `SC`
     *   - `SL`
     *   - `SG`
     *   - `SX`
     *   - `SK`
     *   - `SI`
     *   - `SB`
     *   - `SO`
     *   - `ZA`
     *   - `GS`
     *   - `KR`
     *   - `SS`
     *   - `ES`
     *   - `LK`
     *   - `SD`
     *   - `SR`
     *   - `SJ`
     *   - `SE`
     *   - `CH`
     *   - `SY`
     *   - `TW`
     *   - `TJ`
     *   - `TZ`
     *   - `TH`
     *   - `TL`
     *   - `TG`
     *   - `TK`
     *   - `TO`
     *   - `TT`
     *   - `TN`
     *   - `TR`
     *   - `TM`
     *   - `TC`
     *   - `TV`
     *   - `UG`
     *   - `UA`
     *   - `AE`
     *   - `GB`
     *   - `UM`
     *   - `US`
     *   - `UY`
     *   - `UZ`
     *   - `VU`
     *   - `VE`
     *   - `VN`
     *   - `VG`
     *   - `VI`
     *   - `WF`
     *   - `EH`
     *   - `YE`
     *   - `ZM`
     *   - `ZW`
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`50`" pulumi-lang-dotnet="`50`" pulumi-lang-go="`50`" pulumi-lang-python="`50`" pulumi-lang-yaml="`50`" pulumi-lang-java="`50`">`50`</span>.
     */
    distanceToleranceKm?: pulumi.Input<number>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    executionLogging?: pulumi.Input<boolean>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`5`" pulumi-lang-dotnet="`5`" pulumi-lang-go="`5`" pulumi-lang-python="`5`" pulumi-lang-yaml="`5`" pulumi-lang-java="`5`">`5`</span>.
     */
    historyLoginCount?: pulumi.Input<number>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`100`" pulumi-lang-dotnet="`100`" pulumi-lang-go="`100`" pulumi-lang-python="`100`" pulumi-lang-yaml="`100`" pulumi-lang-java="`100`">`100`</span>.
     */
    historyMaxDistanceKm?: pulumi.Input<number>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`100`" pulumi-lang-dotnet="`100`" pulumi-lang-go="`100`" pulumi-lang-python="`100`" pulumi-lang-yaml="`100`" pulumi-lang-java="`100`">`100`</span>.
     */
    impossibleToleranceKm?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    policyGeoipId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyGeoip resource.
 */
export interface PolicyGeoipArgs {
    asns?: pulumi.Input<pulumi.Input<number>[]>;
    checkHistoryDistance?: pulumi.Input<boolean>;
    checkImpossibleTravel?: pulumi.Input<boolean>;
    /**
     * Allowed values:
     *   - `AF`
     *   - `AX`
     *   - `AL`
     *   - `DZ`
     *   - `AS`
     *   - `AD`
     *   - `AO`
     *   - `AI`
     *   - `AQ`
     *   - `AG`
     *   - `AR`
     *   - `AM`
     *   - `AW`
     *   - `AU`
     *   - `AT`
     *   - `AZ`
     *   - `BS`
     *   - `BH`
     *   - `BD`
     *   - `BB`
     *   - `BY`
     *   - `BE`
     *   - `BZ`
     *   - `BJ`
     *   - `BM`
     *   - `BT`
     *   - `BO`
     *   - `BQ`
     *   - `BA`
     *   - `BW`
     *   - `BV`
     *   - `BR`
     *   - `IO`
     *   - `BN`
     *   - `BG`
     *   - `BF`
     *   - `BI`
     *   - `CV`
     *   - `KH`
     *   - `CM`
     *   - `CA`
     *   - `KY`
     *   - `CF`
     *   - `TD`
     *   - `CL`
     *   - `CN`
     *   - `CX`
     *   - `CC`
     *   - `CO`
     *   - `KM`
     *   - `CG`
     *   - `CD`
     *   - `CK`
     *   - `CR`
     *   - `CI`
     *   - `HR`
     *   - `CU`
     *   - `CW`
     *   - `CY`
     *   - `CZ`
     *   - `DK`
     *   - `DJ`
     *   - `DM`
     *   - `DO`
     *   - `EC`
     *   - `EG`
     *   - `SV`
     *   - `GQ`
     *   - `ER`
     *   - `EE`
     *   - `SZ`
     *   - `ET`
     *   - `FK`
     *   - `FO`
     *   - `FJ`
     *   - `FI`
     *   - `FR`
     *   - `GF`
     *   - `PF`
     *   - `TF`
     *   - `GA`
     *   - `GM`
     *   - `GE`
     *   - `DE`
     *   - `GH`
     *   - `GI`
     *   - `GR`
     *   - `GL`
     *   - `GD`
     *   - `GP`
     *   - `GU`
     *   - `GT`
     *   - `GG`
     *   - `GN`
     *   - `GW`
     *   - `GY`
     *   - `HT`
     *   - `HM`
     *   - `VA`
     *   - `HN`
     *   - `HK`
     *   - `HU`
     *   - `IS`
     *   - `IN`
     *   - `ID`
     *   - `IR`
     *   - `IQ`
     *   - `IE`
     *   - `IM`
     *   - `IL`
     *   - `IT`
     *   - `JM`
     *   - `JP`
     *   - `JE`
     *   - `JO`
     *   - `KZ`
     *   - `KE`
     *   - `KI`
     *   - `KW`
     *   - `KG`
     *   - `LA`
     *   - `LV`
     *   - `LB`
     *   - `LS`
     *   - `LR`
     *   - `LY`
     *   - `LI`
     *   - `LT`
     *   - `LU`
     *   - `MO`
     *   - `MG`
     *   - `MW`
     *   - `MY`
     *   - `MV`
     *   - `ML`
     *   - `MT`
     *   - `MH`
     *   - `MQ`
     *   - `MR`
     *   - `MU`
     *   - `YT`
     *   - `MX`
     *   - `FM`
     *   - `MD`
     *   - `MC`
     *   - `MN`
     *   - `ME`
     *   - `MS`
     *   - `MA`
     *   - `MZ`
     *   - `MM`
     *   - `NA`
     *   - `NR`
     *   - `NP`
     *   - `NL`
     *   - `NC`
     *   - `NZ`
     *   - `NI`
     *   - `NE`
     *   - `NG`
     *   - `NU`
     *   - `NF`
     *   - `KP`
     *   - `MK`
     *   - `MP`
     *   - `NO`
     *   - `OM`
     *   - `PK`
     *   - `PW`
     *   - `PS`
     *   - `PA`
     *   - `PG`
     *   - `PY`
     *   - `PE`
     *   - `PH`
     *   - `PN`
     *   - `PL`
     *   - `PT`
     *   - `PR`
     *   - `QA`
     *   - `RE`
     *   - `RO`
     *   - `RU`
     *   - `RW`
     *   - `BL`
     *   - `SH`
     *   - `KN`
     *   - `LC`
     *   - `MF`
     *   - `PM`
     *   - `VC`
     *   - `WS`
     *   - `SM`
     *   - `ST`
     *   - `SA`
     *   - `SN`
     *   - `RS`
     *   - `SC`
     *   - `SL`
     *   - `SG`
     *   - `SX`
     *   - `SK`
     *   - `SI`
     *   - `SB`
     *   - `SO`
     *   - `ZA`
     *   - `GS`
     *   - `KR`
     *   - `SS`
     *   - `ES`
     *   - `LK`
     *   - `SD`
     *   - `SR`
     *   - `SJ`
     *   - `SE`
     *   - `CH`
     *   - `SY`
     *   - `TW`
     *   - `TJ`
     *   - `TZ`
     *   - `TH`
     *   - `TL`
     *   - `TG`
     *   - `TK`
     *   - `TO`
     *   - `TT`
     *   - `TN`
     *   - `TR`
     *   - `TM`
     *   - `TC`
     *   - `TV`
     *   - `UG`
     *   - `UA`
     *   - `AE`
     *   - `GB`
     *   - `UM`
     *   - `US`
     *   - `UY`
     *   - `UZ`
     *   - `VU`
     *   - `VE`
     *   - `VN`
     *   - `VG`
     *   - `VI`
     *   - `WF`
     *   - `EH`
     *   - `YE`
     *   - `ZM`
     *   - `ZW`
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`50`" pulumi-lang-dotnet="`50`" pulumi-lang-go="`50`" pulumi-lang-python="`50`" pulumi-lang-yaml="`50`" pulumi-lang-java="`50`">`50`</span>.
     */
    distanceToleranceKm?: pulumi.Input<number>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`false`" pulumi-lang-dotnet="`False`" pulumi-lang-go="`false`" pulumi-lang-python="`false`" pulumi-lang-yaml="`false`" pulumi-lang-java="`false`">`false`</span>.
     */
    executionLogging?: pulumi.Input<boolean>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`5`" pulumi-lang-dotnet="`5`" pulumi-lang-go="`5`" pulumi-lang-python="`5`" pulumi-lang-yaml="`5`" pulumi-lang-java="`5`">`5`</span>.
     */
    historyLoginCount?: pulumi.Input<number>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`100`" pulumi-lang-dotnet="`100`" pulumi-lang-go="`100`" pulumi-lang-python="`100`" pulumi-lang-yaml="`100`" pulumi-lang-java="`100`">`100`</span>.
     */
    historyMaxDistanceKm?: pulumi.Input<number>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`100`" pulumi-lang-dotnet="`100`" pulumi-lang-go="`100`" pulumi-lang-python="`100`" pulumi-lang-yaml="`100`" pulumi-lang-java="`100`">`100`</span>.
     */
    impossibleToleranceKm?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    policyGeoipId?: pulumi.Input<string>;
}
