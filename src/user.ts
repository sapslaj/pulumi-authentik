// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
     */
    declare public readonly attributes: pulumi.Output<string | undefined>;
    declare public readonly email: pulumi.Output<string | undefined>;
    /**
     * Generated.
     */
    declare public readonly groups: pulumi.Output<string[]>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    declare public readonly isActive: pulumi.Output<boolean | undefined>;
    /**
     * Defaults to ``.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Optionally set the user's password. Changing the password in authentik will not trigger an update here.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`users`" pulumi-lang-dotnet="`Users`" pulumi-lang-go="`users`" pulumi-lang-python="`users`" pulumi-lang-yaml="`users`" pulumi-lang-java="`users`">`users`</span>.
     */
    declare public readonly path: pulumi.Output<string | undefined>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`internal`" pulumi-lang-dotnet="`Internal`" pulumi-lang-go="`internal`" pulumi-lang-python="`internal`" pulumi-lang-yaml="`internal`" pulumi-lang-java="`internal`">`internal`</span>
     *   - <span pulumi-lang-nodejs="`external`" pulumi-lang-dotnet="`External`" pulumi-lang-go="`external`" pulumi-lang-python="`external`" pulumi-lang-yaml="`external`" pulumi-lang-java="`external`">`external`</span>
     *   - <span pulumi-lang-nodejs="`serviceAccount`" pulumi-lang-dotnet="`ServiceAccount`" pulumi-lang-go="`serviceAccount`" pulumi-lang-python="`service_account`" pulumi-lang-yaml="`serviceAccount`" pulumi-lang-java="`serviceAccount`">`service_account`</span>
     *   - <span pulumi-lang-nodejs="`internalServiceAccount`" pulumi-lang-dotnet="`InternalServiceAccount`" pulumi-lang-go="`internalServiceAccount`" pulumi-lang-python="`internal_service_account`" pulumi-lang-yaml="`internalServiceAccount`" pulumi-lang-java="`internalServiceAccount`">`internal_service_account`</span>
     *  Defaults to <span pulumi-lang-nodejs="`internal`" pulumi-lang-dotnet="`Internal`" pulumi-lang-go="`internal`" pulumi-lang-python="`internal`" pulumi-lang-yaml="`internal`" pulumi-lang-java="`internal`">`internal`</span>.
     */
    declare public readonly type: pulumi.Output<string | undefined>;
    declare public readonly userId: pulumi.Output<string>;
    declare public readonly username: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["attributes"] = state?.attributes;
            resourceInputs["email"] = state?.email;
            resourceInputs["groups"] = state?.groups;
            resourceInputs["isActive"] = state?.isActive;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["path"] = state?.path;
            resourceInputs["type"] = state?.type;
            resourceInputs["userId"] = state?.userId;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["attributes"] = args?.attributes;
            resourceInputs["email"] = args?.email;
            resourceInputs["groups"] = args?.groups;
            resourceInputs["isActive"] = args?.isActive;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["path"] = args?.path;
            resourceInputs["type"] = args?.type;
            resourceInputs["userId"] = args?.userId;
            resourceInputs["username"] = args?.username;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(User.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
     */
    attributes?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    /**
     * Generated.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    isActive?: pulumi.Input<boolean>;
    /**
     * Defaults to ``.
     */
    name?: pulumi.Input<string>;
    /**
     * Optionally set the user's password. Changing the password in authentik will not trigger an update here.
     */
    password?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`users`" pulumi-lang-dotnet="`Users`" pulumi-lang-go="`users`" pulumi-lang-python="`users`" pulumi-lang-yaml="`users`" pulumi-lang-java="`users`">`users`</span>.
     */
    path?: pulumi.Input<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`internal`" pulumi-lang-dotnet="`Internal`" pulumi-lang-go="`internal`" pulumi-lang-python="`internal`" pulumi-lang-yaml="`internal`" pulumi-lang-java="`internal`">`internal`</span>
     *   - <span pulumi-lang-nodejs="`external`" pulumi-lang-dotnet="`External`" pulumi-lang-go="`external`" pulumi-lang-python="`external`" pulumi-lang-yaml="`external`" pulumi-lang-java="`external`">`external`</span>
     *   - <span pulumi-lang-nodejs="`serviceAccount`" pulumi-lang-dotnet="`ServiceAccount`" pulumi-lang-go="`serviceAccount`" pulumi-lang-python="`service_account`" pulumi-lang-yaml="`serviceAccount`" pulumi-lang-java="`serviceAccount`">`service_account`</span>
     *   - <span pulumi-lang-nodejs="`internalServiceAccount`" pulumi-lang-dotnet="`InternalServiceAccount`" pulumi-lang-go="`internalServiceAccount`" pulumi-lang-python="`internal_service_account`" pulumi-lang-yaml="`internalServiceAccount`" pulumi-lang-java="`internalServiceAccount`">`internal_service_account`</span>
     *  Defaults to <span pulumi-lang-nodejs="`internal`" pulumi-lang-dotnet="`Internal`" pulumi-lang-go="`internal`" pulumi-lang-python="`internal`" pulumi-lang-yaml="`internal`" pulumi-lang-java="`internal`">`internal`</span>.
     */
    type?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
     */
    attributes?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    /**
     * Generated.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`true`" pulumi-lang-dotnet="`True`" pulumi-lang-go="`true`" pulumi-lang-python="`true`" pulumi-lang-yaml="`true`" pulumi-lang-java="`true`">`true`</span>.
     */
    isActive?: pulumi.Input<boolean>;
    /**
     * Defaults to ``.
     */
    name?: pulumi.Input<string>;
    /**
     * Optionally set the user's password. Changing the password in authentik will not trigger an update here.
     */
    password?: pulumi.Input<string>;
    /**
     * Defaults to <span pulumi-lang-nodejs="`users`" pulumi-lang-dotnet="`Users`" pulumi-lang-go="`users`" pulumi-lang-python="`users`" pulumi-lang-yaml="`users`" pulumi-lang-java="`users`">`users`</span>.
     */
    path?: pulumi.Input<string>;
    /**
     * Allowed values:
     *   - <span pulumi-lang-nodejs="`internal`" pulumi-lang-dotnet="`Internal`" pulumi-lang-go="`internal`" pulumi-lang-python="`internal`" pulumi-lang-yaml="`internal`" pulumi-lang-java="`internal`">`internal`</span>
     *   - <span pulumi-lang-nodejs="`external`" pulumi-lang-dotnet="`External`" pulumi-lang-go="`external`" pulumi-lang-python="`external`" pulumi-lang-yaml="`external`" pulumi-lang-java="`external`">`external`</span>
     *   - <span pulumi-lang-nodejs="`serviceAccount`" pulumi-lang-dotnet="`ServiceAccount`" pulumi-lang-go="`serviceAccount`" pulumi-lang-python="`service_account`" pulumi-lang-yaml="`serviceAccount`" pulumi-lang-java="`serviceAccount`">`service_account`</span>
     *   - <span pulumi-lang-nodejs="`internalServiceAccount`" pulumi-lang-dotnet="`InternalServiceAccount`" pulumi-lang-go="`internalServiceAccount`" pulumi-lang-python="`internal_service_account`" pulumi-lang-yaml="`internalServiceAccount`" pulumi-lang-java="`internalServiceAccount`">`internal_service_account`</span>
     *  Defaults to <span pulumi-lang-nodejs="`internal`" pulumi-lang-dotnet="`Internal`" pulumi-lang-go="`internal`" pulumi-lang-python="`internal`" pulumi-lang-yaml="`internal`" pulumi-lang-java="`internal`">`internal`</span>.
     */
    type?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
