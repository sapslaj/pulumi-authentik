// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRbacPermission(args: GetRbacPermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetRbacPermissionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("authentik:index/getRbacPermission:getRbacPermission", {
        "codename": args.codename,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRbacPermission.
 */
export interface GetRbacPermissionArgs {
    codename: string;
    id?: string;
}

/**
 * A collection of values returned by getRbacPermission.
 */
export interface GetRbacPermissionResult {
    readonly app: string;
    readonly codename: string;
    readonly id: string;
    readonly model: string;
}
export function getRbacPermissionOutput(args: GetRbacPermissionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRbacPermissionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("authentik:index/getRbacPermission:getRbacPermission", {
        "codename": args.codename,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRbacPermission.
 */
export interface GetRbacPermissionOutputArgs {
    codename: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
