// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProviderSaml extends pulumi.CustomResource {
    /**
     * Get an existing ProviderSaml resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProviderSamlState, opts?: pulumi.CustomResourceOptions): ProviderSaml {
        return new ProviderSaml(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/providerSaml:ProviderSaml';

    /**
     * Returns true if the given object is an instance of ProviderSaml.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProviderSaml {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProviderSaml.__pulumiType;
    }

    declare public readonly acsUrl: pulumi.Output<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=-5`.
     */
    declare public readonly assertionValidNotBefore: pulumi.Output<string | undefined>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=5`.
     */
    declare public readonly assertionValidNotOnOrAfter: pulumi.Output<string | undefined>;
    /**
     * Defaults to ``.
     */
    declare public readonly audience: pulumi.Output<string | undefined>;
    declare public readonly authenticationFlow: pulumi.Output<string | undefined>;
    declare public readonly authnContextClassRefMapping: pulumi.Output<string | undefined>;
    declare public readonly authorizationFlow: pulumi.Output<string>;
    /**
     * Defaults to ``.
     */
    declare public readonly defaultRelayState: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
     * `http://www.w3.org/2001/04/xmlenc#sha256`.
     */
    declare public readonly digestAlgorithm: pulumi.Output<string | undefined>;
    declare public readonly encryptionKp: pulumi.Output<string | undefined>;
    declare public readonly invalidationFlow: pulumi.Output<string>;
    /**
     * Defaults to `authentik`.
     */
    declare public readonly issuer: pulumi.Output<string | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly nameIdMapping: pulumi.Output<string | undefined>;
    declare public readonly propertyMappings: pulumi.Output<string[] | undefined>;
    declare public readonly providerSamlId: pulumi.Output<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=86400`.
     */
    declare public readonly sessionValidNotOnOrAfter: pulumi.Output<string | undefined>;
    /**
     * Defaults to `true`.
     */
    declare public readonly signAssertion: pulumi.Output<boolean | undefined>;
    /**
     * Defaults to `false`.
     */
    declare public readonly signResponse: pulumi.Output<boolean | undefined>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
     * `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
     */
    declare public readonly signatureAlgorithm: pulumi.Output<string | undefined>;
    declare public readonly signingKp: pulumi.Output<string | undefined>;
    /**
     * Allowed values: - `redirect` - `post` Defaults to `redirect`.
     */
    declare public readonly spBinding: pulumi.Output<string | undefined>;
    /**
     * Generated.
     */
    declare public readonly urlSloPost: pulumi.Output<string>;
    /**
     * Generated.
     */
    declare public readonly urlSloRedirect: pulumi.Output<string>;
    /**
     * Generated.
     */
    declare public readonly urlSsoInit: pulumi.Output<string>;
    /**
     * Generated.
     */
    declare public readonly urlSsoPost: pulumi.Output<string>;
    /**
     * Generated.
     */
    declare public readonly urlSsoRedirect: pulumi.Output<string>;
    declare public readonly verificationKp: pulumi.Output<string | undefined>;

    /**
     * Create a ProviderSaml resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderSamlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProviderSamlArgs | ProviderSamlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProviderSamlState | undefined;
            resourceInputs["acsUrl"] = state?.acsUrl;
            resourceInputs["assertionValidNotBefore"] = state?.assertionValidNotBefore;
            resourceInputs["assertionValidNotOnOrAfter"] = state?.assertionValidNotOnOrAfter;
            resourceInputs["audience"] = state?.audience;
            resourceInputs["authenticationFlow"] = state?.authenticationFlow;
            resourceInputs["authnContextClassRefMapping"] = state?.authnContextClassRefMapping;
            resourceInputs["authorizationFlow"] = state?.authorizationFlow;
            resourceInputs["defaultRelayState"] = state?.defaultRelayState;
            resourceInputs["digestAlgorithm"] = state?.digestAlgorithm;
            resourceInputs["encryptionKp"] = state?.encryptionKp;
            resourceInputs["invalidationFlow"] = state?.invalidationFlow;
            resourceInputs["issuer"] = state?.issuer;
            resourceInputs["name"] = state?.name;
            resourceInputs["nameIdMapping"] = state?.nameIdMapping;
            resourceInputs["propertyMappings"] = state?.propertyMappings;
            resourceInputs["providerSamlId"] = state?.providerSamlId;
            resourceInputs["sessionValidNotOnOrAfter"] = state?.sessionValidNotOnOrAfter;
            resourceInputs["signAssertion"] = state?.signAssertion;
            resourceInputs["signResponse"] = state?.signResponse;
            resourceInputs["signatureAlgorithm"] = state?.signatureAlgorithm;
            resourceInputs["signingKp"] = state?.signingKp;
            resourceInputs["spBinding"] = state?.spBinding;
            resourceInputs["urlSloPost"] = state?.urlSloPost;
            resourceInputs["urlSloRedirect"] = state?.urlSloRedirect;
            resourceInputs["urlSsoInit"] = state?.urlSsoInit;
            resourceInputs["urlSsoPost"] = state?.urlSsoPost;
            resourceInputs["urlSsoRedirect"] = state?.urlSsoRedirect;
            resourceInputs["verificationKp"] = state?.verificationKp;
        } else {
            const args = argsOrState as ProviderSamlArgs | undefined;
            if (args?.acsUrl === undefined && !opts.urn) {
                throw new Error("Missing required property 'acsUrl'");
            }
            if (args?.authorizationFlow === undefined && !opts.urn) {
                throw new Error("Missing required property 'authorizationFlow'");
            }
            if (args?.invalidationFlow === undefined && !opts.urn) {
                throw new Error("Missing required property 'invalidationFlow'");
            }
            resourceInputs["acsUrl"] = args?.acsUrl;
            resourceInputs["assertionValidNotBefore"] = args?.assertionValidNotBefore;
            resourceInputs["assertionValidNotOnOrAfter"] = args?.assertionValidNotOnOrAfter;
            resourceInputs["audience"] = args?.audience;
            resourceInputs["authenticationFlow"] = args?.authenticationFlow;
            resourceInputs["authnContextClassRefMapping"] = args?.authnContextClassRefMapping;
            resourceInputs["authorizationFlow"] = args?.authorizationFlow;
            resourceInputs["defaultRelayState"] = args?.defaultRelayState;
            resourceInputs["digestAlgorithm"] = args?.digestAlgorithm;
            resourceInputs["encryptionKp"] = args?.encryptionKp;
            resourceInputs["invalidationFlow"] = args?.invalidationFlow;
            resourceInputs["issuer"] = args?.issuer;
            resourceInputs["name"] = args?.name;
            resourceInputs["nameIdMapping"] = args?.nameIdMapping;
            resourceInputs["propertyMappings"] = args?.propertyMappings;
            resourceInputs["providerSamlId"] = args?.providerSamlId;
            resourceInputs["sessionValidNotOnOrAfter"] = args?.sessionValidNotOnOrAfter;
            resourceInputs["signAssertion"] = args?.signAssertion;
            resourceInputs["signResponse"] = args?.signResponse;
            resourceInputs["signatureAlgorithm"] = args?.signatureAlgorithm;
            resourceInputs["signingKp"] = args?.signingKp;
            resourceInputs["spBinding"] = args?.spBinding;
            resourceInputs["urlSloPost"] = args?.urlSloPost;
            resourceInputs["urlSloRedirect"] = args?.urlSloRedirect;
            resourceInputs["urlSsoInit"] = args?.urlSsoInit;
            resourceInputs["urlSsoPost"] = args?.urlSsoPost;
            resourceInputs["urlSsoRedirect"] = args?.urlSsoRedirect;
            resourceInputs["verificationKp"] = args?.verificationKp;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProviderSaml.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProviderSaml resources.
 */
export interface ProviderSamlState {
    acsUrl?: pulumi.Input<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=-5`.
     */
    assertionValidNotBefore?: pulumi.Input<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=5`.
     */
    assertionValidNotOnOrAfter?: pulumi.Input<string>;
    /**
     * Defaults to ``.
     */
    audience?: pulumi.Input<string>;
    authenticationFlow?: pulumi.Input<string>;
    authnContextClassRefMapping?: pulumi.Input<string>;
    authorizationFlow?: pulumi.Input<string>;
    /**
     * Defaults to ``.
     */
    defaultRelayState?: pulumi.Input<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
     * `http://www.w3.org/2001/04/xmlenc#sha256`.
     */
    digestAlgorithm?: pulumi.Input<string>;
    encryptionKp?: pulumi.Input<string>;
    invalidationFlow?: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    issuer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameIdMapping?: pulumi.Input<string>;
    propertyMappings?: pulumi.Input<pulumi.Input<string>[]>;
    providerSamlId?: pulumi.Input<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=86400`.
     */
    sessionValidNotOnOrAfter?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    signAssertion?: pulumi.Input<boolean>;
    /**
     * Defaults to `false`.
     */
    signResponse?: pulumi.Input<boolean>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
     * `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    signingKp?: pulumi.Input<string>;
    /**
     * Allowed values: - `redirect` - `post` Defaults to `redirect`.
     */
    spBinding?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSloPost?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSloRedirect?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSsoInit?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSsoPost?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSsoRedirect?: pulumi.Input<string>;
    verificationKp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProviderSaml resource.
 */
export interface ProviderSamlArgs {
    acsUrl: pulumi.Input<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=-5`.
     */
    assertionValidNotBefore?: pulumi.Input<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=5`.
     */
    assertionValidNotOnOrAfter?: pulumi.Input<string>;
    /**
     * Defaults to ``.
     */
    audience?: pulumi.Input<string>;
    authenticationFlow?: pulumi.Input<string>;
    authnContextClassRefMapping?: pulumi.Input<string>;
    authorizationFlow: pulumi.Input<string>;
    /**
     * Defaults to ``.
     */
    defaultRelayState?: pulumi.Input<string>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
     * `http://www.w3.org/2001/04/xmlenc#sha256`.
     */
    digestAlgorithm?: pulumi.Input<string>;
    encryptionKp?: pulumi.Input<string>;
    invalidationFlow: pulumi.Input<string>;
    /**
     * Defaults to `authentik`.
     */
    issuer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameIdMapping?: pulumi.Input<string>;
    propertyMappings?: pulumi.Input<pulumi.Input<string>[]>;
    providerSamlId?: pulumi.Input<string>;
    /**
     * Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=86400`.
     */
    sessionValidNotOnOrAfter?: pulumi.Input<string>;
    /**
     * Defaults to `true`.
     */
    signAssertion?: pulumi.Input<boolean>;
    /**
     * Defaults to `false`.
     */
    signResponse?: pulumi.Input<boolean>;
    /**
     * Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
     * `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
     * `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    signingKp?: pulumi.Input<string>;
    /**
     * Allowed values: - `redirect` - `post` Defaults to `redirect`.
     */
    spBinding?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSloPost?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSloRedirect?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSsoInit?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSsoPost?: pulumi.Input<string>;
    /**
     * Generated.
     */
    urlSsoRedirect?: pulumi.Input<string>;
    verificationKp?: pulumi.Input<string>;
}
