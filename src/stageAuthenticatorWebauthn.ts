// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StageAuthenticatorWebauthn extends pulumi.CustomResource {
    /**
     * Get an existing StageAuthenticatorWebauthn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StageAuthenticatorWebauthnState, opts?: pulumi.CustomResourceOptions): StageAuthenticatorWebauthn {
        return new StageAuthenticatorWebauthn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'authentik:index/stageAuthenticatorWebauthn:StageAuthenticatorWebauthn';

    /**
     * Returns true if the given object is an instance of StageAuthenticatorWebauthn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StageAuthenticatorWebauthn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StageAuthenticatorWebauthn.__pulumiType;
    }

    /**
     * Allowed values: - `platform` - `cross-platform`
     */
    declare public readonly authenticatorAttachment: pulumi.Output<string | undefined>;
    declare public readonly configureFlow: pulumi.Output<string | undefined>;
    declare public readonly deviceTypeRestrictions: pulumi.Output<string[] | undefined>;
    declare public readonly friendlyName: pulumi.Output<string | undefined>;
    declare public readonly maxAttempts: pulumi.Output<number | undefined>;
    declare public readonly name: pulumi.Output<string>;
    /**
     * Allowed values: - `discouraged` - `preferred` - `required` Defaults to `preferred`.
     */
    declare public readonly residentKeyRequirement: pulumi.Output<string | undefined>;
    declare public readonly stageAuthenticatorWebauthnId: pulumi.Output<string>;
    /**
     * Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
     */
    declare public readonly userVerification: pulumi.Output<string | undefined>;

    /**
     * Create a StageAuthenticatorWebauthn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StageAuthenticatorWebauthnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StageAuthenticatorWebauthnArgs | StageAuthenticatorWebauthnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StageAuthenticatorWebauthnState | undefined;
            resourceInputs["authenticatorAttachment"] = state?.authenticatorAttachment;
            resourceInputs["configureFlow"] = state?.configureFlow;
            resourceInputs["deviceTypeRestrictions"] = state?.deviceTypeRestrictions;
            resourceInputs["friendlyName"] = state?.friendlyName;
            resourceInputs["maxAttempts"] = state?.maxAttempts;
            resourceInputs["name"] = state?.name;
            resourceInputs["residentKeyRequirement"] = state?.residentKeyRequirement;
            resourceInputs["stageAuthenticatorWebauthnId"] = state?.stageAuthenticatorWebauthnId;
            resourceInputs["userVerification"] = state?.userVerification;
        } else {
            const args = argsOrState as StageAuthenticatorWebauthnArgs | undefined;
            resourceInputs["authenticatorAttachment"] = args?.authenticatorAttachment;
            resourceInputs["configureFlow"] = args?.configureFlow;
            resourceInputs["deviceTypeRestrictions"] = args?.deviceTypeRestrictions;
            resourceInputs["friendlyName"] = args?.friendlyName;
            resourceInputs["maxAttempts"] = args?.maxAttempts;
            resourceInputs["name"] = args?.name;
            resourceInputs["residentKeyRequirement"] = args?.residentKeyRequirement;
            resourceInputs["stageAuthenticatorWebauthnId"] = args?.stageAuthenticatorWebauthnId;
            resourceInputs["userVerification"] = args?.userVerification;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StageAuthenticatorWebauthn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StageAuthenticatorWebauthn resources.
 */
export interface StageAuthenticatorWebauthnState {
    /**
     * Allowed values: - `platform` - `cross-platform`
     */
    authenticatorAttachment?: pulumi.Input<string>;
    configureFlow?: pulumi.Input<string>;
    deviceTypeRestrictions?: pulumi.Input<pulumi.Input<string>[]>;
    friendlyName?: pulumi.Input<string>;
    maxAttempts?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * Allowed values: - `discouraged` - `preferred` - `required` Defaults to `preferred`.
     */
    residentKeyRequirement?: pulumi.Input<string>;
    stageAuthenticatorWebauthnId?: pulumi.Input<string>;
    /**
     * Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
     */
    userVerification?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StageAuthenticatorWebauthn resource.
 */
export interface StageAuthenticatorWebauthnArgs {
    /**
     * Allowed values: - `platform` - `cross-platform`
     */
    authenticatorAttachment?: pulumi.Input<string>;
    configureFlow?: pulumi.Input<string>;
    deviceTypeRestrictions?: pulumi.Input<pulumi.Input<string>[]>;
    friendlyName?: pulumi.Input<string>;
    maxAttempts?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * Allowed values: - `discouraged` - `preferred` - `required` Defaults to `preferred`.
     */
    residentKeyRequirement?: pulumi.Input<string>;
    stageAuthenticatorWebauthnId?: pulumi.Input<string>;
    /**
     * Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
     */
    userVerification?: pulumi.Input<string>;
}
